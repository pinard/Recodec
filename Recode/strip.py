# DO NOT MODIFY THIS FILE!  It was automatically generated.
# -*- coding: utf-8 -*-

# Conversion between different charsets, surfaces and structures.
# Copyright © 1993, 1997, 1999, 2002, 2004 Free Software Foundation, Inc.
# Contributed by François Pinard <pinard@iro.umontreal.ca>, 1993.

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.

# This library is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with the `recode' Library; see the file `COPYING.LIB'.
# If not, write to the Free Software Foundation, Inc., 59 Temple Place -
# Suite 330, Boston, MA 02111-1307, USA.

import recode

declares = [
    ('ISO_646.basic', 'ref', 'ISO_646.basic:1983'),
    ('INVARIANT', 'iso-ir-170'),
    ('ISO_646.irv', 'iso-ir-2', 'ISO_646.irv:1983', 'irv'),
    ('BS_4730', 'iso-ir-4', 'ISO646-GB', 'gb', 'uk'),
    ('ANSI_X3.4-1968', 'iso-ir-6', 'ANSI_X3.4-1986', 'ISO_646.irv:1991', 'ASCII', 'ISO646-US', 'US-ASCII', 'us', 'IBM367', 'CP367', '367'),
    ('NATS-SEFI', 'iso-ir-8-1'),
    ('NATS-SEFI-ADD', 'iso-ir-8-2'),
    ('NATS-DANO', 'iso-ir-9-1'),
    ('NATS-DANO-ADD', 'iso-ir-9-2'),
    ('SEN_850200_B', 'iso-ir-10', 'FI', 'ISO646-FI', 'ISO646-SE', 'se', 'SS636127'),
    ('SEN_850200_C', 'iso-ir-11', 'ISO646-SE2', 'se2'),
    ('JIS_C6220-1969-jp', 'JIS_C6220-1969', 'iso-ir-13', 'katakana', 'x0201-7'),
    ('JIS_C6220-1969-ro', 'iso-ir-14', 'jp', 'ISO646-JP'),
    ('IT', 'iso-ir-15', 'ISO646-IT'),
    ('PT', 'iso-ir-16', 'ISO646-PT'),
    ('ES', 'iso-ir-17', 'ISO646-ES'),
    ('greek7-old', 'iso-ir-18'),
    ('latin-greek', 'iso-ir-19'),
    ('DIN_66003', 'iso-ir-21', 'de', 'ISO646-DE'),
    ('NF_Z_62-010_(1973)', 'iso-ir-25', 'ISO646-FR1'),
    ('Latin-greek-1', 'iso-ir-27'),
    ('ISO_5427', 'iso-ir-37'),
    ('BS_viewdata', 'iso-ir-47'),
    ('INIS', 'iso-ir-49'),
    ('INIS-8', 'iso-ir-50'),
    ('INIS-cyrillic', 'iso-ir-51'),
    ('ISO_5427-ext', 'iso-ir-54', 'ISO_5427:1981'),
    ('ISO_5428', 'iso-ir-55', 'ISO_5428:1980'),
    ('GB_1988-80', 'iso-ir-57', 'cn', 'ISO646-CN'),
    ('NS_4551-1', 'iso-ir-60', 'ISO646-NO', 'no'),
    ('NS_4551-2', 'ISO646-NO2', 'iso-ir-61', 'no2'),
    ('NF_Z_62-010', 'iso-ir-69', 'ISO646-FR', 'fr'),
    ('PT2', 'iso-ir-84', 'ISO646-PT2'),
    ('ES2', 'iso-ir-85', 'ISO646-ES2'),
    ('MSZ_7795.3', 'iso-ir-86', 'ISO646-HU', 'hu'),
    ('greek7', 'iso-ir-88'),
    ('ASMO_449', 'ISO_9036', 'arabic7', 'iso-ir-89'),
    ('JIS_C6229-1984-a', 'iso-ir-91', 'jp-ocr-a'),
    ('JIS_C6229-1984-b', 'iso-ir-92', 'ISO646-JP-OCR-B', 'jp-ocr-b'),
    ('JIS_C6229-1984-b-add', 'iso-ir-93', 'jp-ocr-b-add'),
    ('JIS_C6229-1984-hand', 'iso-ir-94', 'jp-ocr-hand'),
    ('JIS_C6229-1984-hand-add', 'iso-ir-95', 'jp-ocr-hand-add'),
    ('JIS_C6229-1984-kana', 'iso-ir-96'),
    ('ISO_2033-1983', 'iso-ir-98', 'e13b'),
    ('ISO-8859-1', 'iso-ir-100', 'ISO_8859-1:1987', 'ISO_8859-1', 'ISO8859-1', 'latin1', 'l1', 'IBM819', 'CP819', '819'),
    ('ISO-8859-2', 'iso-ir-101', 'ISO_8859-2:1987', 'ISO_8859-2', 'ISO8859-2', 'latin2', 'l2', 'IBM912', 'CP912', '912'),
    ('T.61-7bit', 'iso-ir-102'),
    ('ISO-8859-3', 'iso-ir-109', 'ISO_8859-3:1988', 'ISO_8859-3', 'ISO8859-3', 'latin3', 'l3'),
    ('ISO-8859-4', 'iso-ir-110', 'ISO_8859-4:1988', 'ISO_8859-4', 'ISO8859-4', 'latin4', 'l4'),
    ('ECMA-cyrillic', 'iso-ir-111', 'ECMA-113:1986', 'ECMA-113'),
    ('CSA_Z243.4-1985-1', 'iso-ir-121', 'ISO646-CA', 'csa7-1', 'ca'),
    ('CSA_Z243.4-1985-2', 'iso-ir-122', 'ISO646-CA2', 'csa7-2'),
    ('CSA_Z243.4-1985-gr', 'iso-ir-123'),
    ('ISO-8859-7', 'iso-ir-126', 'ISO_8859-7:1987', 'ISO_8859-7', 'ISO8859-7', 'ELOT_928', 'ECMA-118', 'greek', 'greek8'),
    ('ISO-8859-6', 'iso-ir-127', 'ISO_8859-6:1987', 'ISO_8859-6', 'ISO8859-6', 'ECMA-114', 'ASMO-708', 'arabic'),
    ('ISO-8859-8', 'iso-ir-138', 'ISO_8859-8:1988', 'ISO_8859-8', 'ISO8859-8', 'hebrew'),
    ('CSN_369103', 'iso-ir-139', 'KOI-8_L2', 'koi8l2'),
    ('JUS_I.B1.002', 'iso-ir-141', 'ISO646-YU', 'js', 'yu'),
    ('IEC_P27-1', 'iso-ir-143'),
    ('ISO-8859-5', 'iso-ir-144', 'ISO_8859-5:1988', 'ISO_8859-5', 'ISO8859-5', 'cyrillic'),
    ('JUS_I.B1.003-serb', 'iso-ir-146', 'serbian'),
    ('JUS_I.B1.003-mac', 'macedonian', 'iso-ir-147'),
    ('ISO-8859-9', 'iso-ir-148', 'ISO_8859-9:1989', 'ISO_8859-9', 'ISO8859-9', 'latin5', 'l5'),
    ('greek-ccitt', 'iso-ir-150'),
    ('NC_NC00-10', 'cuba', 'NC_NC00-10:81', 'iso-ir-151', 'ISO646-CU'),
    ('ISO_6937-2-25', 'iso-ir-152'),
    ('GOST_19768-87', 'ST_SEV_358-88', 'iso-ir-153'),
    ('ISO_8859-supp', 'iso-ir-154', 'latin1-2-5'),
    ('ISO_10367-box', 'iso-ir-155'),
    ('ISO-8859-10', 'iso-ir-157', 'ISO_8859-10:1993', 'ISO_8859-10', 'ISO8859-10', 'L6', 'latin6'),
    ('ISO-8859-13', 'iso-ir-179a', 'ISO_8859-13:1998', 'ISO_8859-13', 'ISO8859-13', 'latin7', 'iso-baltic', 'l7'),
    ('ISO-8859-14', 'iso-ir-199', 'ISO_8859-14:1998', 'ISO_8859-14', 'ISO8859-14', 'latin8', 'iso-celtic', 'l8'),
    ('ISO-8859-15', 'iso-ir-203', 'ISO_8859-15:1998', 'ISO_8859-15', 'ISO8859-15', 'latin9', 'l9'),
    ('sami', 'latin-lap', 'lap', 'iso-ir-158'),
    ('baltic', 'iso-ir-179'),
    ('DS_2089', 'DS2089', 'ISO646-DK', 'dk'),
    ('JIS_X0201', 'X0201'),
    ('KSC5636', 'ISO646-KR'),
    ('DEC-MCS', 'dec'),
    ('hp-roman8', 'roman8', 'r8'),
    ('NeXTSTEP', 'next'),
    ('macintosh', 'mac'),
    'mac-is',
    ('IBM037', 'CP037', '037', 'ebcdic-cp-us', 'ebcdic-cp-ca', 'ebcdic-cp-wt', 'ebcdic-cp-nl'),
    ('IBM038', 'EBCDIC-INT', 'CP038', '038'),
    ('IBM256', 'EBCDIC-INT1', 'CP256', '256'),
    ('IBM273', 'CP273', '273'),
    ('IBM274', 'EBCDIC-BE', 'CP274', '274'),
    ('IBM275', 'EBCDIC-BR', 'CP275', '275'),
    ('IBM277', 'EBCDIC-CP-DK', 'EBCDIC-CP-NO'),
    ('IBM278', 'CP278', '278', 'ebcdic-cp-fi', 'ebcdic-cp-se'),
    ('IBM280', 'CP280', '280', 'ebcdic-cp-it'),
    ('IBM281', 'EBCDIC-JP-E', 'CP281', '281'),
    ('IBM284', 'CP284', '284', 'ebcdic-cp-es'),
    ('IBM285', 'CP285', '285', 'ebcdic-cp-gb'),
    ('IBM290', 'CP290', '290', 'EBCDIC-JP-kana'),
    ('IBM297', 'CP297', '297', 'ebcdic-cp-fr'),
    ('IBM420', 'CP420', '420', 'ebcdic-cp-ar1'),
    ('IBM423', 'CP423', '423', 'ebcdic-cp-gr'),
    ('IBM424', 'CP424', '424', 'ebcdic-cp-he'),
    ('IBM437', 'CP437', '437'),
    ('IBM500', 'CP500', '500', '500V1', 'ebcdic-cp-be', 'ebcdic-cp-ch'),
    ('IBM850', 'CP850', '850'),
    ('IBM851', 'CP851', '851'),
    ('IBM852', 'CP852', '852', 'pcl2', 'pclatin2'),
    ('IBM855', 'CP855', '855'),
    ('IBM857', 'CP857', '857'),
    ('IBM860', 'CP860', '860'),
    ('IBM861', 'CP861', '861', 'cp-is'),
    ('IBM862', 'CP862', '862'),
    ('IBM863', 'CP863', '863'),
    ('IBM864', 'CP864', '864'),
    ('IBM865', 'CP865', '865'),
    ('IBM868', 'CP868', '868', 'cp-ar'),
    ('IBM869', 'CP869', '869', 'cp-gr'),
    ('IBM870', 'CP870', '870', 'ebcdic-cp-roece', 'ebcdic-cp-yu'),
    ('IBM871', 'CP871', '871', 'ebcdic-cp-is'),
    ('IBM875', 'CP875', '875', 'EBCDIC-Greek'),
    ('IBM880', 'CP880', '880', 'EBCDIC-Cyrillic'),
    ('IBM891', 'CP891', '891'),
    ('IBM903', 'CP903', '903'),
    ('IBM904', 'CP904', '904'),
    ('IBM905', 'CP905', '905', 'ebcdic-cp-tr'),
    ('IBM918', 'CP918', '918', 'ebcdic-cp-ar2'),
    ('IBM1004', 'CP1004', '1004', 'os2latin1'),
    ('IBM1026', 'CP1026', '1026'),
    ('IBM1047', 'CP1047', '1047'),
    ('CP1250', 'ms-ee', '1250', 'windows-1250'),
    ('CP1251', 'ms-cyrl', '1251', 'windows-1251'),
    ('CP1252', 'ms-ansi', '1252', 'windows-1252'),
    ('CP1253', 'ms-greek', '1253', 'windows-1253'),
    ('CP1254', 'ms-turk', '1254', 'windows-1254'),
    ('CP1255', 'ms-hebr', '1255', 'windows-1255'),
    ('CP1256', 'ms-arab', '1256', 'windows-1256'),
    ('CP1257', 'WinBaltRim', '1257', 'windows-1257'),
    'EBCDIC-AT-DE',
    'EBCDIC-AT-DE-A',
    'EBCDIC-CA-FR',
    'EBCDIC-DK-NO',
    'EBCDIC-DK-NO-A',
    'EBCDIC-FI-SE',
    'EBCDIC-FI-SE-A',
    'EBCDIC-FR',
    'EBCDIC-IT',
    'EBCDIC-PT',
    'EBCDIC-ES',
    'EBCDIC-ES-A',
    'EBCDIC-ES-S',
    'EBCDIC-UK',
    'EBCDIC-US',
    ('EBCDIC-IS-FRISS', 'friss'),
    'KOI-7',
    ('KOI-8', 'GOST_19768-74'),
    'KOI8-R',
    'KOI8-RU',
    'KOI8-U',
    ('CWI', 'CWI-2', 'cp-hu'),
    ('macintosh_ce', 'macce'),
    ]

unicode_data_pool = (
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0020\u0021'  # 0
    u'\u0022\uFFFF\uFFFF\u0025\u0026\u0027\u0028\u0029\u002A\u002B'  # 10
    u'\u002C\u002D\u002E\u002F\u0030\u0031\u0032\u0033\u0034\u0035'  # 20
    u'\u0036\u0037\u0038\u0039\u003A\u003B\u003C\u003D\u003E\u003F'  # 30
    u'\uFFFF\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049'  # 40
    u'\u004A\u004B\u004C\u004D\u004E\u004F\u0050\u0051\u0052\u0053'  # 50
    u'\u0054\u0055\u0056\u0057\u0058\u0059\u005A\uFFFF\uFFFF\uFFFF'  # 60
    u'\uFFFF\u005F\uFFFF\u0061\u0062\u0063\u0064\u0065\u0066\u0067'  # 70
    u'\u0068\u0069\u006A\u006B\u006C\u006D\u006E\u006F\u0070\u0071'  # 80
    u'\u0072\u0073\u0074\u0075\u0076\u0077\u0078\u0079\u007A\uFFFF'  # 90
    u'\uFFFF\uFFFF\uFFFF\uFFFF\u0000\u0001\u0002\u0003\u0004\u0005'  # 100
    u'\u0006\u0007\u0008\u0009\u000A\u000B\u000C\u000D\u000E\u000F'  # 110
    u'\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019'  # 120
    u'\u001A\u001B\u001C\u001D\u001E\u001F\u0078\u0079\u007A\uFFFF'  # 130
    u'\uFFFF\uFFFF\uFFFF\u007F\u0020\u0021\u0022\u0023\u00A4\u0025'  # 140
    u'\u0026\u0027\u0040\u0041\u0042\u0043\u0044\u0045\u0046\u0047'  # 150
    u'\u0058\u0059\u005A\u005B\u005C\u005D\u005E\u005F\u0060\u0061'  # 160
    u'\u0062\u0063\u0064\u0065\u0066\u0067\u0078\u0079\u007A\u007B'  # 170
    u'\u007C\u007D\u203E\u007F\u0020\u0021\u0022\u00A3\u0024\u0025'  # 180
    u'\u0026\u0027\u0020\u0021\u0022\u0023\u0024\u0025\u0026\u0027'  # 190
    u'\u0078\u0079\u007A\u007B\u007C\u007D\u007E\u007F\uE018\u0041'  # 200
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0058\u0059\u005A\u00C4'  # 210
    u'\u00D6\u00C5\u25A0\u005F\uE019\u0061\u0062\u0063\u0064\u0065'  # 220
    u'\u0066\u0067\u0078\u0079\u007A\u00E4\u00F6\u00E5\u2013\u007F'  # 230
    u'\uFFFF\u00C0\uFFFF\uFFFF\u0110\u00C9\uFFFF\uFFFF\u00DE\uFFFF'  # 240
    u'\uFFFF\uFFFF\uFFFF\u00DC\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00C6'  # 250
    u'\u00D8\uFFFF\uFFFF\uFFFF\uFFFF\u00E0\uFFFF\uFFFF\u0111\u00E9'  # 260
    u'\uFFFF\uFFFF\u00FE\uFFFF\uFFFF\uFFFF\uFFFF\u00FC\uFFFF\uFFFF'  # 270
    u'\uFFFF\uFFFF\uFFFF\u00E6\u00F8\uFFFF\uFFFF\uFFFF\u0020\u0021'  # 280
    u'\u00AB\u00BB\u0024\u0025\u0026\u0027\u0058\u0059\u005A\u00C6'  # 290
    u'\u00D8\u00C5\u25A0\u005F\u0078\u0079\u007A\u00E6\u00F8\u00E5'  # 300
    u'\u2013\u007F\uFFFF\uFFFF\uFFFF\u00C4\u00D6\uFFFF\uFFFF\uFFFF'  # 310
    u'\uFFFF\uFFFF\uFFFF\u00E4\u00F6\uFFFF\uFFFF\uFFFF\u0058\u0059'  # 320
    u'\u005A\u00C4\u00D6\u00C5\u005E\u005F\u0078\u0079\u007A\u00E4'  # 330
    u'\u00F6\u00E5\u203E\u007F\u00C9\u0041\u0042\u0043\u0044\u0045'  # 340
    u'\u0046\u0047\u0058\u0059\u005A\u00C4\u00D6\u00C5\u00DC\u005F'  # 350
    u'\u00E9\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u0078\u0079'  # 360
    u'\u007A\u00E4\u00F6\u00E5\u00FC\u007F\u0020\u3002\u300C\u300D'  # 370
    u'\u3001\u30FB\u30F2\u30A1\u30A3\u30A5\u30A7\u30A9\u30E3\u30E5'  # 380
    u'\u30E7\u30C3\u30FC\u30A2\u30A4\u30A6\u30A8\u30AA\u30AB\u30AD'  # 390
    u'\u30AF\u30B1\u30B3\u30B5\u30B7\u30B9\u30BB\u30BD\u30BF\u30C1'  # 400
    u'\u30C4\u30C6\u30C8\u30CA\u30CB\u30CC\u30CD\u30CE\u30CF\u30D2'  # 410
    u'\u30D5\u30D8\u30DB\u30DE\u30DF\u30E0\u30E1\u30E2\u30E4\u30E6'  # 420
    u'\u30E8\u30E9\u30EA\u30EB\u30EC\u30ED\u30EF\u30F3\u309B\u309C'  # 430
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u007F\u0058\u0059'  # 440
    u'\u005A\u005B\u00A5\u005D\u005E\u005F\u00A7\u0041\u0042\u0043'  # 450
    u'\u0044\u0045\u0046\u0047\u0058\u0059\u005A\u00B0\u00E7\u00E9'  # 460
    u'\u005E\u005F\u00F9\u0061\u0062\u0063\u0064\u0065\u0066\u0067'  # 470
    u'\u0078\u0079\u007A\u00E0\u00F2\u00E8\u00EC\u007F\u0058\u0059'  # 480
    u'\u005A\u00C3\u00C7\u00D5\u005E\u005F\u0078\u0079\u007A\u00E3'  # 490
    u'\u00E7\u00F5\u00B0\u007F\u0058\u0059\u005A\u00A1\u00D1\u00BF'  # 500
    u'\u005E\u005F\u0078\u0079\u007A\u00B0\u00F1\u00E7\u007E\u007F'  # 510
    u'\u00B4\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9'  # 520
    u'\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u037A\u03C1\u03C3'  # 530
    u'\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u1FCF\u1FBF\u1FCE'  # 540
    u'\u007E\u005F\u0060\u0391\u0392\u03A8\u0394\u0395\u03A6\u0393'  # 550
    u'\u0397\u0399\u039E\u039A\u039B\u039C\u039D\u039F\u03A0\uFFFF'  # 560
    u'\u03A1\u03A3\u03A4\u0398\u03A9\u00B7\u03A7\u03A5\u0396\u1FDF'  # 570
    u'\u1FFE\u1FDE\u00A8\u007F\u03A7\u03A5\u0396\u007B\u007C\u007D'  # 580
    u'\u00A8\u007F\u0058\u0059\u005A\u00C4\u00D6\u00DC\u005E\u005F'  # 590
    u'\u0078\u0079\u007A\u00E4\u00F6\u00FC\u00DF\u007F\u00E0\u0041'  # 600
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0058\u0059\u005A\u00B0'  # 610
    u'\u00E7\u00A7\u005E\u005F\u0078\u0079\u007A\u00E9\u00F9\u00E8'  # 620
    u'\u00A8\u007F\u0020\u039E\u0022\u0393\u00A4\u0025\u0026\u0027'  # 630
    u'\u0038\u0039\u03A8\u003B\u003C\u003D\u003E\u03A0\u0394\u0041'  # 640
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0058\u0059\u005A\u03A9'  # 650
    u'\u0398\u03A6\u039B\u03A3\u044E\u0430\u0431\u0446\u0434\u0435'  # 660
    u'\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E'  # 670
    u'\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B'  # 680
    u'\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426'  # 690
    u'\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C'  # 700
    u'\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412'  # 710
    u'\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u007F\u0058\u0059'  # 720
    u'\u005A\u2190\u00BD\u2192\u2191\u25A1\u0078\u0079\u007A\u00BC'  # 730
    u'\u2225\u00BE\u00F7\u007F\u0020\uFFFF\uFFFF\uFFFF\u0024\u0025'  # 740
    u'\uFFFF\u0027\u0038\u0039\u003A\u003B\u003C\u003D\u003E\uFFFF'  # 750
    u'\u0058\u0059\u005A\u005B\uFFFF\u005D\uFFFF\uFFFF\u0078\u0079'  # 760
    u'\u007A\uFFFF\u007C\uFFFF\uFFFF\u007F\u0020\uFFFF\uFFFF\uFFFF'  # 770
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u03B1\u03B2\u03B3\u03B4'  # 780
    u'\u039E\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u2192\u222B'  # 790
    u'\u2070\u00B9\u00B2\u00B3\u2074\u2075\u2076\u2077\u2078\u2079'  # 800
    u'\u207A\u207B\u30EB\u0394\u039B\u03A9\u2080\u2081\u2082\u2083'  # 810
    u'\u2084\u2085\u2086\u2087\u2088\u2089\u03A3\u03BC\u03BD\u03C9'  # 820
    u'\u03C0\u007F\uFFFF\uFFFF\uFFFF\uFFFF\u221A\uFFFF\u2192\u222B'  # 830
    u'\u03B1\u03B2\u03B3\u03B4\u03A3\u03BC\u03BD\u03C9\u03C0\u039E'  # 840
    u'\u0394\u039B\u03A9\u042A\u207B\u207A\u0491\u0452\u0453\u0454'  # 850
    u'\u0451\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u045E'  # 860
    u'\u045F\uFFFF\u0463\u0473\u0475\u046B\uFFFF\uFFFF\uFFFF\uFFFF'  # 870
    u'\uFFFF\uFFFF\uFFFF\u005B\uFFFF\u005D\uFFFF\u005F\u0490\u0402'  # 880
    u'\u0403\u0404\u0401\u0405\u0406\u0407\u0408\u0409\u040A\u040B'  # 890
    u'\u040C\u040E\u040F\u042A\u0462\u0472\u0474\u046A\uFFFF\uFFFF'  # 900
    u'\uFFFF\uFFFF\u0020\uE002\uE003\uE009\uE005\uE012\uE013\uE014'  # 910
    u'\u00AB\u00BB\u201D\u201C\u0374\u0375\uFFFF\uFFFF\uFFFF\uFFFF'  # 920
    u'\uFFFF\u00B7\uFFFF\uFFFF\uFFFF\u003B\uFFFF\u0391\u0392\uFFFF'  # 930
    u'\u0393\u0394\u0395\u03DA\u03DC\u0396\u0397\u0398\u0399\u039A'  # 940
    u'\u039B\u039C\u039D\u039E\u039F\u03A0\u03DE\u03A1\u03A3\uFFFF'  # 950
    u'\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03E0\uFFFF\uFFFF\u03B1'  # 960
    u'\u03B2\u03D0\u03B3\u03B4\u03B5\uE01A\uE01B\u03B6\u03B7\u03B8'  # 970
    u'\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\uE01C\u03C1'  # 980
    u'\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\uE01D\u007F'  # 990
    u'\u0020\u0021\u0022\u0023\u00A5\u0025\u0026\u0027\u0058\u0059'  # 1000
    u'\u005A\u00C6\u00D8\u00C5\u005E\u005F\u0078\u0079\u007A\u00E6'  # 1010
    u'\u00F8\u00E5\u203E\u007F\u0020\u0021\u0022\u00A7\u0024\u0025'  # 1020
    u'\u0026\u0027\u0078\u0079\u007A\u00E6\u00F8\u00E5\u007C\u007F'  # 1030
    u'\u00B5\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u00B4\u0041'  # 1040
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0078\u0079\u007A\u00E3'  # 1050
    u'\u00E7\u00F5\u007E\u007F\u2022\u0041\u0042\u0043\u0044\u0045'  # 1060
    u'\u0046\u0047\u0058\u0059\u005A\u00A1\u00D1\u00C7\u00BF\u005F'  # 1070
    u'\u0078\u0079\u007A\u00B4\u00F1\u00E7\u00A8\u007F\u00C1\u0041'  # 1080
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0058\u0059\u005A\u00C9'  # 1090
    u'\u00D6\u00DC\u005E\u005F\u00E1\u0061\u0062\u0063\u0064\u0065'  # 1100
    u'\u0066\u0067\u0078\u0079\u007A\u00E9\u00F6\u00FC\u02DD\u007F'  # 1110
    u'\u0040\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399'  # 1120
    u'\uFFFF\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3'  # 1130
    u'\u03A4\u03A5\u03A6\uFFFF\u03A7\u03A8\u03A9\u005B\u005C\u005D'  # 1140
    u'\u005E\u005F\u0060\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7'  # 1150
    u'\u03B8\u03B9\uFFFF\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0'  # 1160
    u'\u03C1\u03C3\u03C4\u03C5\u03C6\u03C2\u03C7\u03C8\u03C9\u007B'  # 1170
    u'\u007C\u007D\u203E\u007F\u0028\u0029\u002A\u002B\u060C\u002D'  # 1180
    u'\u002E\u002F\u0038\u0039\u003A\u061B\u003C\u003D\u003E\u061F'  # 1190
    u'\u0040\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629'  # 1200
    u'\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633'  # 1210
    u'\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u005B\u005C\u005D'  # 1220
    u'\u005E\u005F\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647'  # 1230
    u'\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651'  # 1240
    u'\u0652\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u007B'  # 1250
    u'\u007C\u007D\u203E\u007F\u0020\uFFFF\u0022\u00A3\u0024\u0025'  # 1260
    u'\u0026\u0027\u0038\u0039\u003A\u003B\u2440\u003D\u2441\u003F'  # 1270
    u'\u0058\u0059\u005A\uFFFF\u00A5\u2442\u005E\u005F\uFFFF\uFFFF'  # 1280
    u'\uFFFF\uFFFF\u2443\uFFFF\uFFFF\u007F\u0058\u0059\u005A\u2329'  # 1290
    u'\u00A5\u232A\u005E\u005F\u0078\u0079\u007A\u007B\u007C\u007D'  # 1300
    u'\uFFFF\u007F\u0020\uFFFF\uFFFF\u00A3\u00A4\u005C\uFFFF\u00A7'  # 1310
    u'\uFFFF\uFFFF\uFFFF\uFFFF\u007C\uFFFF\uFFFF\u007F\u0020\uFFFF'  # 1320
    u'\uFFFF\uFFFF\uFFFF\u005C\uFFFF\uFFFF\u0020\uFFFF\u300C\u300D'  # 1330
    u'\uFFFF\uFFFF\u30F2\uFFFF\u0038\u0039\u2446\u2447\u2448\u2449'  # 1340
    u'\uFFFF\uFFFF\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087'  # 1350
    u'\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091'  # 1360
    u'\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B'  # 1370
    u'\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5'  # 1380
    u'\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF'  # 1390
    u'\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9'  # 1400
    u'\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3'  # 1410
    u'\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD'  # 1420
    u'\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7'  # 1430
    u'\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1'  # 1440
    u'\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB'  # 1450
    u'\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5'  # 1460
    u'\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF'  # 1470
    u'\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160'  # 1480
    u'\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142'  # 1490
    u'\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD'  # 1500
    u'\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7'  # 1510
    u'\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143'  # 1520
    u'\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170'  # 1530
    u'\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A'  # 1540
    u'\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F'  # 1550
    u'\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F'  # 1560
    u'\u00FA\u0171\u00FC\u00FD\u0163\u02D9\u0058\u0059\u005A\u005B'  # 1570
    u'\uFFFF\u005D\uFFFF\u005F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFF'  # 1580
    u'\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFF\u017B'  # 1590
    u'\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131'  # 1600
    u'\u015F\u011F\u0135\u00BD\uFFFF\u017C\u00C0\u00C1\u00C2\uFFFF'  # 1610
    u'\u00C4\u010A\u0108\u00C7\uFFFF\u00D1\u00D2\u00D3\u00D4\u0120'  # 1620
    u'\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF'  # 1630
    u'\u00E0\u00E1\u00E2\uFFFF\u00E4\u010B\u0109\u00E7\uFFFF\u00F1'  # 1640
    u'\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB'  # 1650
    u'\u00FC\u016D\u015D\u02D9\u00A0\u0104\u0138\u0156\u00A4\u0128'  # 1660
    u'\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF'  # 1670
    u'\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161'  # 1680
    u'\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3'  # 1690
    u'\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD'  # 1700
    u'\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7'  # 1710
    u'\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1'  # 1720
    u'\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB'  # 1730
    u'\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5'  # 1740
    u'\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9'  # 1750
    u'\u00A0\u0452\u0453\u0451\u0454\u0455\u0456\u0457\u0458\u0459'  # 1760
    u'\u045A\u045B\u045C\u00AD\u045E\u045F\u2116\u0402\u0403\u0401'  # 1770
    u'\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00A4'  # 1780
    u'\u040E\u040F\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A'  # 1790
    u'\u0058\u0059\u005A\u00E2\u00E7\u00EA\u00EE\u005F\u00F4\u0061'  # 1800
    u'\u0062\u0063\u0064\u0065\u0066\u0067\u0078\u0079\u007A\u00E9'  # 1810
    u'\u00F9\u00E8\u00FB\u007F\u0058\u0059\u005A\u00E2\u00E7\u00EA'  # 1820
    u'\u00C9\u005F\u00A0\u00A1\u00A8\u00A3\u00A2\u00A5\u00B1\u00B4'  # 1830
    u'\u207D\u207E\u00BD\u207A\u00B8\u00AD\u00B7\u207B\u2078\u2079'  # 1840
    u'\u00BC\u00BE\u21D0\u2260\u2265\u00BF\u00C0\u00C1\u00C2\u00C7'  # 1850
    u'\u00C8\u00C9\u00CA\u00CB\u00CD\u00CE\u00CF\u00D1\u00D3\u00D4'  # 1860
    u'\u00D9\u00DA\u00DB\u00DC\u00AE\u00A7\u00B6\u00B5\u00AA\u00BA'  # 1870
    u'\u2018\u2019\u201C\u201D\u00AB\u00BB\u00B0\u00A6\u00E0\u00E1'  # 1880
    u'\u00E2\u00E7\u00E8\u00E9\u00EA\u00EB\u00ED\u00EE\u00EF\u00F1'  # 1890
    u'\u00F3\u00F4\u00F9\u00FA\u00FB\u00FC\u00A9\u2500\u2502\u2514'  # 1900
    u'\u2518\u2510\u250C\u251C\u2534\u2524\u252C\u253C\u00AC\u2588'  # 1910
    u'\u00A0\u201B\u2019\u00A3\uFFFF\uFFFF\u00A6\u00A7\u00A8\u00A9'  # 1920
    u'\uFFFF\u00AB\u00AC\u00AD\uFFFF\u2014\u00B0\u00B1\u00B2\u00B3'  # 1930
    u'\u00B4\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD'  # 1940
    u'\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397'  # 1950
    u'\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1'  # 1960
    u'\uFFFF\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB'  # 1970
    u'\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5'  # 1980
    u'\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF'  # 1990
    u'\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9'  # 2000
    u'\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFF\u00A0\uFFFF\uFFFF\uFFFF'  # 2010
    u'\u00A4\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u060C\u00AD'  # 2020
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u061B\uFFFF\uFFFF\uFFFF\u061F'  # 2030
    u'\uFFFF\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0638\u0639'  # 2040
    u'\u063A\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00A0\uFFFF\u00A2\u00A3'  # 2050
    u'\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD'  # 2060
    u'\u00AE\u203E\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFF'  # 2070
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u2017\u05D0\u05D1'  # 2080
    u'\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB'  # 2090
    u'\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5'  # 2100
    u'\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 2110
    u'\u00A0\u0104\u02D8\u0141\u0024\u013D\u015A\u00A7\u017D\u0041'  # 2120
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0058\u0059\u005A\u0160'  # 2130
    u'\u0110\u0106\u010C\u005F\u017E\u0061\u0062\u0063\u0064\u0065'  # 2140
    u'\u0066\u0067\u0078\u0079\u007A\u0161\u0111\u0107\u010D\u007F'  # 2150
    u'\u02C7\u2261\u2227\u2228\u2229\u222A\u2282\u2283\u21D0\u21D2'  # 2160
    u'\u2234\u2235\u2208\u220B\u2286\u2287\u222B\u222E\u221E\u2207'  # 2170
    u'\u2202\u223C\u2248\u2243\u2245\u2264\u2260\u2265\u2194\u00AC'  # 2180
    u'\u2200\u2203\u05D0\u25A1\u2225\u0393\u0394\u22A5\u2220\u221F'  # 2190
    u'\u0398\u2329\u232A\u039B\u2032\u2033\u039E\u2213\u03A0\u00B2'  # 2200
    u'\u03A3\u00D7\u00B3\u03A5\u03A6\u00B7\u03A8\u03A9\u2205\u21C0'  # 2210
    u'\u221A\u0192\u221D\u00B1\u00B0\u03B1\u03B2\u03B3\u03B4\u03B5'  # 2220
    u'\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u2030'  # 2230
    u'\u03C0\u03C1\u03C3\u00F7\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9'  # 2240
    u'\u2020\u2190\u2191\u2192\u2193\u203E\u00A0\u0401\u0402\u0403'  # 2250
    u'\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD'  # 2260
    u'\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417'  # 2270
    u'\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421'  # 2280
    u'\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B'  # 2290
    u'\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435'  # 2300
    u'\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F'  # 2310
    u'\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449'  # 2320
    u'\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453'  # 2330
    u'\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7'  # 2340
    u'\u045E\u045F\u0416\u0410\u0411\u0426\u0414\u0415\u0424\u0413'  # 2350
    u'\u0425\u0418\u0408\u041A\u041B\u041C\u041D\u041E\u041F\u0409'  # 2360
    u'\u0420\u0421\u0422\u0423\u0412\u040A\u040F\u0405\u0417\u0428'  # 2370
    u'\u0402\u040B\u0427\u005F\u0436\u0430\u0431\u0446\u0434\u0435'  # 2380
    u'\u0444\u0433\u0445\u0438\u0458\u043A\u043B\u043C\u043D\u043E'  # 2390
    u'\u043F\u0459\u0440\u0441\u0442\u0443\u0432\u045A\u045F\u0455'  # 2400
    u'\u0437\u0448\u0452\u045B\u0447\u007F\u040F\u0405\u0417\u0428'  # 2410
    u'\u0403\u040C\u0427\u005F\u045F\u0455\u0437\u0448\u0453\u045C'  # 2420
    u'\u0447\u007F\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7'  # 2430
    u'\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E8\u00E9'  # 2440
    u'\u0119\u00EB\u0117\u00ED\u00EE\u012B\u011F\u00F1\u00F2\u00F3'  # 2450
    u'\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131'  # 2460
    u'\u015F\u00FF\u03A8\u03A9\uFFFF\u005B\u005C\u005D\u005E\u005F'  # 2470
    u'\uFFFF\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03C8\u03C9'  # 2480
    u'\uFFFF\u007B\u007C\u007D\u00AF\u007F\u0058\u0059\u005A\u00A1'  # 2490
    u'\u00D1\u005D\u00BF\u005F\u0078\u0079\u007A\u00B4\u00F1\u005B'  # 2500
    u'\u00A8\u007F\u00A0\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 2510
    u'\uFFFF\uFFFF\u201C\uFFFF\u2190\u2191\u2192\u2193\uFFFF\uFFFF'  # 2520
    u'\u201D\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 2530
    u'\u2122\u266A\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u215B\u215C'  # 2540
    u'\u215D\u215E\u2126\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0132\u013F'  # 2550
    u'\uFFFF\uFFFF\u0152\uFFFF\u0174\u0176\u0178\u0149\uFFFF\uFFFF'  # 2560
    u'\uFFFF\uFFFF\uFFFF\uFFFF\u0133\u0140\uFFFF\uFFFF\u0153\uFFFF'  # 2570
    u'\u0175\u0177\uFFFF\uFFFF\u00A0\u0401\uFFFF\uFFFF\uFFFF\uFFFF'  # 2580
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00AD\uFFFF\uFFFF'  # 2590
    u'\uFFFF\u0451\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 2600
    u'\u0100\u0108\u010A\uFFFF\u0116\u0112\u011C\u2018\u201C\u2122'  # 2610
    u'\u2190\u2191\u2192\u2193\uFFFF\uFFFF\u0101\u0109\u010B\u00F0'  # 2620
    u'\u0117\u0113\u011D\u2019\u201D\u266A\u215B\u215C\u215D\u215E'  # 2630
    u'\uFFFF\u011E\u0120\u0122\u0124\u0126\u0128\u0130\u012A\u012E'  # 2640
    u'\u0132\u0134\u0136\u013B\u013F\u0145\u2014\u014A\u014C\u0152'  # 2650
    u'\u0156\u015C\u0166\u00DE\u0168\u016C\u016A\u0172\u0174\u00DD'  # 2660
    u'\u0176\u0178\u2126\u011F\u0121\u0123\u0125\u0127\u0129\u0131'  # 2670
    u'\u012B\u012F\u0133\u0135\u0137\u013C\u0140\u0146\u0138\u014B'  # 2680
    u'\u014D\u0153\u0157\u015D\u0167\u00FE\u0169\u016D\u016B\u0173'  # 2690
    u'\u0175\u00FD\u0177\u0149\u2551\u2550\u2554\u2557\u255A\u255D'  # 2700
    u'\u2560\u2563\u2566\u2569\u256C\uE019\u2584\u2588\u25AA\uFFFF'  # 2710
    u'\u2502\u2500\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534'  # 2720
    u'\u253C\u2591\u2592\u2593\uFFFF\uFFFF\u00A0\u0104\u0112\u0122'  # 2730
    u'\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD'  # 2740
    u'\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7'  # 2750
    u'\u013C\u0111\u0161\u0167\u017E\u2014\u016B\u014B\u010C\u00C9'  # 2760
    u'\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3'  # 2770
    u'\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD'  # 2780
    u'\u00DE\u00DF\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF'  # 2790
    u'\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173'  # 2800
    u'\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\u00A0\u00A1\u00A2\u00A3'  # 2810
    u'\u00A4\u201E\u00A6\u00A7\u00B0\u00B1\u00B2\u00B3\u201C\u00B5'  # 2820
    u'\u00B6\u00B7\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112'  # 2830
    u'\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143'  # 2840
    u'\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A'  # 2850
    u'\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5'  # 2860
    u'\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C'  # 2870
    u'\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142'  # 2880
    u'\u015B\u016B\u00FC\u017C\u017E\u2019\u00A0\u1E02\u1E03\u00A3'  # 2890
    u'\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD'  # 2900
    u'\u00AE\u1E61\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56'  # 2910
    u'\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u0178\u0174\u00D1'  # 2920
    u'\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB'  # 2930
    u'\u00DC\u00DD\u0176\u00DF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5'  # 2940
    u'\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF'  # 2950
    u'\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9'  # 2960
    u'\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3'  # 2970
    u'\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153'  # 2980
    u'\u0178\u00BF\u00B4\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 2990
    u'\u02BB\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0102\u00C0'  # 3000
    u'\u01DE\u01E0\u01E2\u0114\u00C8\u01E4\u01E6\u01E8\u014E\u00D2'  # 3010
    u'\u01EA\u01EC\u01B7\u01EE\u0103\u00E0\u01DF\u01E1\u01E3\u0115'  # 3020
    u'\u00E8\u01E5\u01E7\u01E9\u014F\u00F2\u01EB\u01ED\u0292\u01EF'  # 3030
    u'\u00A0\u201D\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00D8\u00A9'  # 3040
    u'\u201E\u00AB\u00AC\u00AD\u00AE\u00C6\u00F8\u00B9\u201C\u00BB'  # 3050
    u'\u00BC\u00BD\u00BE\u00E6\u012E\u0116\u0100\u0106\u00C4\u00C5'  # 3060
    u'\u0104\u010C\u0122\u00C9\u017D\u0118\u0112\u0136\u012A\u013B'  # 3070
    u'\u0141\u0145\u0143\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0160'  # 3080
    u'\u015A\u016A\u00DC\u017B\u0179\u00DF\u012F\u0117\u0101\u0107'  # 3090
    u'\u00E4\u00E5\u0105\u010D\u0123\u00E9\u017E\u0119\u0113\u0137'  # 3100
    u'\u012B\u013C\u0142\u0146\u0144\u00F3\u014D\u00F5\u00F6\u00F7'  # 3110
    u'\u0173\u0161\u015B\u016B\u00FC\u017C\u017A\u0138\u0078\u0079'  # 3120
    u'\u007A\u00E6\u00F8\u00E5\u007E\u007F\uFFFF\u3002\u300C\u300D'  # 3130
    u'\u3001\u30FB\u30F2\u30A1\u0058\u0059\u005A\u005B\u20A9\u005D'  # 3140
    u'\u005E\u005F\uFFFF\u00A1\u00A2\u00A3\uFFFF\u00A5\uFFFF\u00A7'  # 3150
    u'\u00A4\u00A9\u00AA\u00AB\uFFFF\uFFFF\uFFFF\uFFFF\u00B0\u00B1'  # 3160
    u'\u00B2\u00B3\uFFFF\u00B5\u00B6\u00B7\uFFFF\u00B9\u00BA\u00BB'  # 3170
    u'\u00BC\u00BD\uFFFF\u00BF\uFFFF\u00D1\u00D2\u00D3\u00D4\u00D5'  # 3180
    u'\u00D6\u0152\u00D8\u00D9\u00DA\u00DB\u00DC\u0178\uFFFF\u00DF'  # 3190
    u'\uFFFF\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u0153\u00F8\u00F9'  # 3200
    u'\u00FA\u00FB\u00FC\u00FF\uFFFF\uFFFF\u00A0\u00C0\u00C2\u00C8'  # 3210
    u'\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9'  # 3220
    u'\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1'  # 3230
    u'\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA'  # 3240
    u'\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9'  # 3250
    u'\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED'  # 3260
    u'\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4'  # 3270
    u'\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5'  # 3280
    u'\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5'  # 3290
    u'\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB'  # 3300
    u'\u00B1\uFFFF\u00A0\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C7'  # 3310
    u'\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D9\u00DA\u00DB'  # 3320
    u'\u00DC\u00DD\u00DE\u00B5\u00D7\u00F7\u00A9\u00A1\u00A2\u00A3'  # 3330
    u'\u2044\u00A5\u0192\u00A7\u00A4\uFFFF\u201C\u00AB\uFFFF\uFFFF'  # 3340
    u'\uFB01\uFB02\u00AE\u2013\u2020\u2021\u00B7\u00A6\u00B6\u2022'  # 3350
    u'\uFFFF\uFFFF\u201D\u00BB\u2026\u2030\u00AC\u00BF\u00B9\u02CB'  # 3360
    u'\u00B4\u02C6\u02DC\u00AF\u02D8\u02D9\u00A8\u00B2\u02DA\u00B8'  # 3370
    u'\u00B3\u02DD\u02DB\u02C7\u2014\u00B1\u00BC\u00BD\u00BE\u00E0'  # 3380
    u'\u00E1\u00E2\u00E3\u00E4\u00E5\u00E7\u00E8\u00E9\u00EA\u00EB'  # 3390
    u'\u00EC\u00C6\u00ED\u00AA\u00EE\u00EF\u00F0\u00F1\u0141\u00D8'  # 3400
    u'\u0152\u00BA\u00F2\u00F3\u00F4\u00F5\u00F6\u00E6\u00F9\u00FA'  # 3410
    u'\u00FB\u0131\u00FC\u00FD\u0142\u00F8\u0153\u00DF\u00FE\u00FF'  # 3420
    u'\uFFFF\uFFFF\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1'  # 3430
    u'\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB'  # 3440
    u'\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5'  # 3450
    u'\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022'  # 3460
    u'\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8'  # 3470
    u'\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0'  # 3480
    u'\u222B\u00AA\u00BA\u03A9\u00E6\u00F8\u00BF\u00A1\u00AC\u221A'  # 3490
    u'\u0192\u2248\u0394\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u2126'  # 3500
    u'\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA'  # 3510
    u'\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7'  # 3520
    u'\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE'  # 3530
    u'\u00CF\u00CC\u00D3\u00D4\uE01E\u00D2\u00DA\u00DB\u00D9\u0131'  # 3540
    u'\uFFFF\uFFFF\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7'  # 3550
    u'\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2014\u2013'  # 3560
    u'\u201C\u201D\u2018\u2019\u00F7\u25C6\u00FF\u0178\u2044\u00A4'  # 3570
    u'\u0110\u0111\u00DE\u00FE\u0000\u0001\u0002\u0003\u009C\u0009'  # 3580
    u'\u0086\u007F\u0097\u008D\u008E\u000B\u000C\u000D\u000E\u000F'  # 3590
    u'\u0010\u0011\u0012\u0013\u009D\u0085\u0008\u0087\u0018\u0019'  # 3600
    u'\u0092\u008F\u001C\u001D\u001E\u001F\u0080\u0081\u0082\u0083'  # 3610
    u'\u0084\u000A\u0017\u001B\u0088\u0089\u008A\u008B\u008C\u0005'  # 3620
    u'\u0006\u0007\u0090\u0091\u0016\u0093\u0094\u0095\u0096\u0004'  # 3630
    u'\u0098\u0099\u009A\u009B\u0014\u0015\u009E\u001A\u0020\u00A0'  # 3640
    u'\u00E2\u00E4\u00E0\u00E1\u00E3\u00E5\u00E7\u00F1\u00A2\u002E'  # 3650
    u'\u003C\u0028\u002B\u007C\u0026\u00E9\u00EA\u00EB\u00E8\u00ED'  # 3660
    u'\u00EE\u00EF\u00EC\u00DF\u0021\u0024\u002A\u0029\u003B\u00AC'  # 3670
    u'\u002D\u002F\u00C2\u00C4\u00C0\u00C1\u00C3\u00C5\u00C7\u00D1'  # 3680
    u'\u00A6\u002C\u0025\u005F\u003E\u003F\u00F8\u00C9\u00CA\u00CB'  # 3690
    u'\u00C8\u00CD\u00CE\u00CF\u00CC\u0060\u003A\u0023\u0040\u0027'  # 3700
    u'\u003D\u0022\u00D8\u0061\u0062\u0063\u0064\u0065\u0066\u0067'  # 3710
    u'\u0068\u0069\u00AB\u00BB\u00F0\u00FD\u00FE\u00B1\u00B0\u006A'  # 3720
    u'\u006B\u006C\u006D\u006E\u006F\u0070\u0071\u0072\u00AA\u00BA'  # 3730
    u'\u00E6\u00B8\u00C6\u00A4\u00B5\u007E\u0073\u0074\u0075\u0076'  # 3740
    u'\u0077\u0078\u0079\u007A\u00A1\u00BF\u00D0\u00DD\u00DE\u00AE'  # 3750
    u'\u005E\u00A3\u00A5\u00B7\u00A9\u00A7\u00B6\u00BC\u00BD\u00BE'  # 3760
    u'\u005B\u005D\u00AF\u00A8\u00B4\u00D7\u007B\u0041\u0042\u0043'  # 3770
    u'\u0044\u0045\u0046\u0047\u0048\u0049\u00AD\u00F4\u00F6\u00F2'  # 3780
    u'\u00F3\u00F5\u007D\u004A\u004B\u004C\u004D\u004E\u004F\u0050'  # 3790
    u'\u0051\u0052\u00B9\u00FB\u00FC\u00F9\u00FA\u00FF\u005C\u00F7'  # 3800
    u'\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005A\u00B2\u00D4'  # 3810
    u'\u00D6\u00D2\u00D3\u00D5\u0038\u0039\u00B3\u00DB\u00DC\u00D9'  # 3820
    u'\u00DA\u009F\uFFFF\uFFFF\u005B\u002E\u003C\u0028\u002B\u0021'  # 3830
    u'\u0026\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 3840
    u'\u005D\u0024\u002A\u0029\u003B\u005E\u002D\u002F\uFFFF\uFFFF'  # 3850
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00A6\u002C\u0025\u005F'  # 3860
    u'\u003E\u003F\uFFFF\u0060\u003A\u0023\u0040\u0027\u003D\u0022'  # 3870
    u'\u0068\u0069\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u006A'  # 3880
    u'\u006B\u006C\u006D\u006E\u006F\u0070\u0071\u0072\uFFFF\uFFFF'  # 3890
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u007E\u0073\u0074\u0075\u0076'  # 3900
    u'\u0077\u0078\u0079\u007A\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 3910
    u'\u0048\u0049\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0051\u0052'  # 3920
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u005C\uFFFF\u0053\u0054'  # 3930
    u'\u0055\u0056\u0057\u0058\u0059\u005A\uFFFF\uFFFF\uFFFF\uFFFF'  # 3940
    u'\uFFFF\uFFFF\u0038\u0039\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u009F'  # 3950
    u'\u00E7\u00F1\u005B\u002E\u003C\u0028\u002B\u0021\u00EC\u00DF'  # 3960
    u'\u005D\u0024\u002A\u0029\u003B\u005E\u00A2\u00A3\u00A5\u20A7'  # 3970
    u'\u0192\u00A7\u00B6\u00BC\u00BD\u00BE\u00AC\u007C\u203E\u00A8'  # 3980
    u'\u00B4\u2017\u005C\u2003\u0053\u0054\u0055\u0056\u0057\u0058'  # 3990
    u'\u0020\u00A0\u00E2\u007B\u00E0\u00E1\u00E3\u00E5\u00E7\u00F1'  # 4000
    u'\u00C4\u002E\u003C\u0028\u002B\u0021\u00EC\u007E\u00DC\u0024'  # 4010
    u'\u002A\u0029\u003B\u005E\u002D\u002F\u00C2\u005B\u00C0\u00C1'  # 4020
    u'\u00C3\u00C5\u00C7\u00D1\u00F6\u002C\u0025\u005F\u003E\u003F'  # 4030
    u'\u00CC\u0060\u003A\u0023\u00A7\u0027\u003D\u0022\u00B5\u00DF'  # 4040
    u'\u0073\u0074\u0075\u0076\u0077\u0078\u00A2\u00A3\u00A5\u00B7'  # 4050
    u'\u00A9\u0040\u00B6\u00BC\u00BD\u00BE\u00AC\u007C\u203E\u00A8'  # 4060
    u'\u00B4\u00D7\u00E4\u0041\u0042\u0043\u0044\u0045\u0046\u0047'  # 4070
    u'\u0048\u0049\u00AD\u00F4\u00A6\u00F2\u00F3\u00F5\u00FC\u004A'  # 4080
    u'\u004B\u004C\u004D\u004E\u004F\u0050\u0051\u0052\u00B9\u00FB'  # 4090
    u'\u007D\u00F9\u00FA\u00FF\u00D6\u00F7\u0053\u0054\u0055\u0056'  # 4100
    u'\u0057\u0058\u0059\u005A\u00B2\u00D4\u005C\u00D2\u00D3\u00D5'  # 4110
    u'\u0038\u0039\u00B3\u00DB\u005D\u00D9\u00DA\u009F\uFFFF\uFFFF'  # 4120
    u'\u00F9\u002C\u0025\u005F\u003E\u003F\uFFFF\u0060\u003A\u0023'  # 4130
    u'\u00E0\u0027\u003D\u0022\uFFFF\u00A8\u0073\u0074\u0075\u0076'  # 4140
    u'\u0077\u0078\u00E9\u0041\u0042\u0043\u0044\u0045\u0046\u0047'  # 4150
    u'\u00E8\u004A\u004B\u004C\u004D\u004E\u004F\u0050\u00E7\uFFFF'  # 4160
    u'\u0053\u0054\u0055\u0056\u0057\u0058\uFFFF\uFFFF\u00C9\u002E'  # 4170
    u'\u003C\u0028\u002B\u0021\uFFFF\uFFFF\u0024\u00C7\u002A\u0029'  # 4180
    u'\u003B\u005E\uFFFF\uFFFF\u00E7\u002C\u0025\u005F\u003E\u003F'  # 4190
    u'\uFFFF\u00E3\u003A\u00D5\u00C3\u0027\u003D\u0022\u00F5\u0041'  # 4200
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u00E9\u004A\u004B\u004C'  # 4210
    u'\u004D\u004E\u004F\u0050\u0020\u00A0\u00E2\u00E4\u00E0\u00E1'  # 4220
    u'\u00E3\u007D\u00E7\u00F1\u0023\u002E\u003C\u0028\u002B\u0021'  # 4230
    u'\u00EC\u00DF\u00A4\u00C5\u002A\u0029\u003B\u005E\u002D\u002F'  # 4240
    u'\u00C2\u00C4\u00C0\u00C1\u00C3\u0024\u00C7\u00D1\u00F8\u002C'  # 4250
    u'\u0025\u005F\u003E\u003F\u00A6\u00C9\u00CA\u00CB\u00C8\u00CD'  # 4260
    u'\u00CE\u00CF\u00CC\u0060\u003A\u00C6\u00D8\u0027\u003D\u0022'  # 4270
    u'\u0040\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u0071\u0072'  # 4280
    u'\u00AA\u00BA\u007B\u00B8\u005B\u005D\u00B5\u00FC\u0073\u0074'  # 4290
    u'\u0075\u0076\u0077\u0078\u00A2\u00A3\u00A5\u00B7\u00A9\u00A7'  # 4300
    u'\u00B6\u00BC\u00E6\u0041\u0042\u0043\u0044\u0045\u0046\u0047'  # 4310
    u'\u00E5\u004A\u004B\u004C\u004D\u004E\u004F\u0050\u0051\u0052'  # 4320
    u'\u00B9\u00FB\u007E\u00F9\u00FA\u00FF\u0020\u00A0\u00E2\u007B'  # 4330
    u'\u00E0\u00E1\u00E3\u007D\u00E7\u00F1\u00A7\u002E\u003C\u0028'  # 4340
    u'\u002B\u0021\u0026\u0060\u00EA\u00EB\u00E8\u00ED\u00EE\u00EF'  # 4350
    u'\u002D\u002F\u00C2\u0023\u00C0\u00C1\u00C3\u0024\u00CC\u00E9'  # 4360
    u'\u003A\u00C4\u00D6\u0027\u003D\u0022\u0071\u0072\u00AA\u00BA'  # 4370
    u'\u00E6\u00B8\u00C6\u005D\u00A2\u00A3\u00A5\u00B7\u00A9\u005B'  # 4380
    u'\u00B6\u00BC\u0059\u005A\u00B2\u00D4\u0040\u00D2\u00D3\u00D5'  # 4390
    u'\u0020\u00A0\u00E2\u00E4\u007B\u00E1\u00E3\u00E5\u005C\u00F1'  # 4400
    u'\u00B0\u002E\u003C\u0028\u002B\u0021\u0026\u005D\u00EA\u00EB'  # 4410
    u'\u007D\u00ED\u00EE\u00EF\u007E\u00DF\u00E9\u0024\u002A\u0029'  # 4420
    u'\u003B\u005E\u00C7\u00D1\u00F2\u002C\u0025\u005F\u003E\u003F'  # 4430
    u'\u00CC\u00F9\u003A\u00A3\u00A7\u0027\u003D\u0022\u005B\u006A'  # 4440
    u'\u006B\u006C\u006D\u006E\u006F\u0070\u00B5\u00EC\u0073\u0074'  # 4450
    u'\u0075\u0076\u0077\u0078\u00A2\u0023\u00A5\u00B7\u00A9\u0040'  # 4460
    u'\u00B6\u00BC\u0048\u0049\u00AD\u00F4\u00F6\u00A6\u00F3\u00F5'  # 4470
    u'\u0051\u0052\u00B9\u00FB\u00FC\u0060\u00FA\u00FF\u00E7\u00F7'  # 4480
    u'\u0053\u0054\u0055\u0056\u0057\u0058\uFFFF\uFFFF\u00A3\u002E'  # 4490
    u'\u003C\u0028\u002B\u007C\uFFFF\uFFFF\u0021\u00A5\u002A\u0029'  # 4500
    u'\u003B\u00AC\uFFFF\u203E\u0073\u0074\u0075\u0076\u0077\u0078'  # 4510
    u'\u0024\uFFFF\u0053\u0054\u0055\u0056\u0057\u0058\u00E7\u00A6'  # 4520
    u'\u005B\u002E\u003C\u0028\u002B\u007C\u00EC\u00DF\u005D\u0024'  # 4530
    u'\u002A\u0029\u003B\u00AC\u00C7\u0023\u00F1\u002C\u0025\u005F'  # 4540
    u'\u003E\u003F\u00CC\u0060\u003A\u00D1\u0040\u0027\u003D\u0022'  # 4550
    u'\u00B5\u00A8\u0073\u0074\u0075\u0076\u0077\u0078\u00BD\u00BE'  # 4560
    u'\u005E\u0021\u203E\u007E\u00B4\u00D7\u00E7\u00F1\u0024\u002E'  # 4570
    u'\u003C\u0028\u002B\u007C\u00EC\u00DF\u0021\u00A3\u002A\u0029'  # 4580
    u'\u003B\u00AC\u00B5\u203E\u0073\u0074\u0075\u0076\u0077\u0078'  # 4590
    u'\u00A2\u005B\u00A5\u00B7\u00A9\u00A7\u00B6\u00BC\u00BD\u00BE'  # 4600
    u'\u005E\u005D\u007E\u00A8\u00B4\u00D7\u30A3\u30A5\u00A3\u002E'  # 4610
    u'\u003C\u0028\u002B\u007C\u0026\u30A7\u30A9\u30E3\u30E5\u30E7'  # 4620
    u'\u30C3\uFFFF\u30FC\uFFFF\u0021\u00A5\u002A\u0029\u003B\u00AC'  # 4630
    u'\uFFFF\u30A2\u30A4\u30A6\u30A8\u30AA\u30AB\u30AD\u30AF\u30B1'  # 4640
    u'\u30B3\uFFFF\u30B5\u30B7\u30B9\u30BB\u30BD\u30BF\u30C1\u30C4'  # 4650
    u'\u30C6\u30C8\u30CA\u30CB\u30CC\u30CD\u30CE\uFFFF\uFFFF\u30CF'  # 4660
    u'\u30D2\u30D5\uFFFF\u203E\u30D8\u30DB\u30DE\u30DF\u30E0\u30E1'  # 4670
    u'\u30E2\u30E4\u30E6\uFFFF\u30E8\u30E9\u30EA\u30EB\uFFFF\uFFFF'  # 4680
    u'\u30EC\u30ED\u30EF\u30F3\u309B\u309C\uFFFF\u004A\u004B\u004C'  # 4690
    u'\u004D\u004E\u004F\u0050\u0020\u00A0\u00E2\u00E4\u0040\u00E1'  # 4700
    u'\u00E3\u00E5\u0026\u007B\u00EA\u00EB\u007D\u00ED\u00EE\u00EF'  # 4710
    u'\u00EC\u00DF\u00A7\u0024\u002A\u0029\u003B\u005E\u00C7\u00D1'  # 4720
    u'\u00F9\u002C\u0025\u005F\u003E\u003F\u00CC\u00B5\u003A\u00A3'  # 4730
    u'\u00E0\u0027\u003D\u0022\u0060\u00A8\u0073\u0074\u0075\u0076'  # 4740
    u'\u0077\u0078\u00A2\u0023\u00A5\u00B7\u00A9\u005D\u00B6\u00BC'  # 4750
    u'\u00BD\u00BE\u00AC\u007C\u203E\u007E\u00B4\u00D7\u0051\u0052'  # 4760
    u'\u00B9\u00FB\u00FC\u00A6\u00FA\u00FF\u0020\u00A0\u0651\uFE7D'  # 4770
    u'\u0640\uFFFF\u0621\u0622\uFE82\u0623\u00A2\u002E\u003C\u0028'  # 4780
    u'\u002B\u007C\u0026\uFE84\u0624\uFFFF\uFFFF\u0626\u0627\uFE8E'  # 4790
    u'\u0628\uFE91\u0021\u0024\u002A\u0029\u003B\u00AC\u002D\u002F'  # 4800
    u'\u0629\u062A\uFE97\u062B\uFE9B\u062C\uFE9F\u062D\u00A6\u002C'  # 4810
    u'\u0025\u005F\u003E\u003F\uFEA3\u062E\uFEA7\u062F\u0630\u0631'  # 4820
    u'\u0632\u0633\uFEB3\u060C\u003A\u0023\u0040\u0027\u003D\u0022'  # 4830
    u'\u0634\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u0068\u0069'  # 4840
    u'\uFEB7\u0635\uFEBB\u0636\uFEBF\u0637\u0638\u006A\u006B\u006C'  # 4850
    u'\u006D\u006E\u006F\u0070\u0071\u0072\u0639\uFECA\uFECB\uFECC'  # 4860
    u'\u063A\uFECE\uFECF\u00F7\u0073\u0074\u0075\u0076\u0077\u0078'  # 4870
    u'\u0079\u007A\uFED0\u0641\uFED3\u0642\uFED7\u0643\uFEDB\u0644'  # 4880
    u'\uFEF5\uFEF6\uFEF7\uFEF8\uFFFF\uFFFF\uFEFB\uFEFC\uFEDF\u0645'  # 4890
    u'\uFEE3\u0646\uFEE7\u0647\u061B\u0041\u0042\u0043\u0044\u0045'  # 4900
    u'\u0046\u0047\u0048\u0049\u00AD\uFEEB\uFFFF\uFEEC\uFFFF\u0648'  # 4910
    u'\u061F\u004A\u004B\u004C\u004D\u004E\u004F\u0050\u0051\u0052'  # 4920
    u'\u0649\uFEF0\u064A\uFEF2\uFEF3\u0660\u00D7\uFFFF\u0053\u0054'  # 4930
    u'\u0055\u0056\u0057\u0058\u0059\u005A\u0661\u0662\uFFFF\u0663'  # 4940
    u'\u0664\u0665\u0038\u0039\uFFFF\u0666\u0667\u0668\u0669\u009F'  # 4950
    u'\u0020\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399'  # 4960
    u'\u005B\u002E\u003C\u0028\u002B\u0021\u0026\u039A\u039B\u039C'  # 4970
    u'\u039D\u039E\u039F\u03A0\u03A1\u03A3\u005D\u0024\u002A\u0029'  # 4980
    u'\u003B\u005E\u002D\u002F\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9'  # 4990
    u'\uFFFF\uFFFF\uFFFF\u002C\u0025\u005F\u003E\u003F\uFFFF\u0386'  # 5000
    u'\u0388\u0389\uFFFF\u038A\u038C\u038E\u038F\u0060\u003A\u00A3'  # 5010
    u'\u00A7\u0027\u003D\u0022\u00C4\u0061\u0062\u0063\u0064\u0065'  # 5020
    u'\u0066\u0067\u0068\u0069\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6'  # 5030
    u'\u00D6\u006A\u006B\u006C\u006D\u006E\u006F\u0070\u0071\u0072'  # 5040
    u'\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u00DC\u00A8\u0073\u0074'  # 5050
    u'\u0075\u0076\u0077\u0078\u0079\u007A\u03BD\u03BE\u03BF\u03C0'  # 5060
    u'\u03C1\u03C2\uFFFF\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD'  # 5070
    u'\u03CB\u03CE\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u00B8\u0041'  # 5080
    u'\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\uFFFF\u03C9'  # 5090
    u'\u00C2\u00E0\u00E4\u00EA\u00B4\u004A\u004B\u004C\u004D\u004E'  # 5100
    u'\u004F\u0050\u0051\u0052\u00B1\u00E9\u00E8\u00EB\u00EE\u00EF'  # 5110
    u'\u00B0\uFFFF\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005A'  # 5120
    u'\u00BD\u00F6\u00F4\u00FB\u00F9\u00FC\u0038\u0039\u00FF\u00E7'  # 5130
    u'\u00C7\uFFFF\uFFFF\u009F\u0020\u05D0\u05D1\u05D2\u05D3\u05D4'  # 5140
    u'\u05D5\u05D6\u05D7\u05D8\u00A2\u002E\u003C\u0028\u002B\u007C'  # 5150
    u'\u0026\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1'  # 5160
    u'\u0021\u0024\u002A\u0029\u003B\u00AC\u002D\u002F\u05E2\u05E3'  # 5170
    u'\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u00A6\u002C\u0025\u005F'  # 5180
    u'\u003E\u003F\uFFFF\u05EA\uFFFF\uFFFF\u00A0\uFFFF\uFFFF\uFFFF'  # 5190
    u'\u21D4\u0060\u003A\u0023\u0040\u0027\u003D\u0022\u0068\u0069'  # 5200
    u'\u00AB\u00BB\uFFFF\uFFFF\uFFFF\uFFFF\u0071\u0072\uFFFF\uFFFF'  # 5210
    u'\uFFFF\u00B8\uFFFF\u00A4\u0079\u007A\uFFFF\uFFFF\uFFFF\uFFFF'  # 5220
    u'\uFFFF\u00AE\u00BD\u00BE\u005B\u005D\u203E\u00A8\u00B4\u00D7'  # 5230
    u'\u0048\u0049\u00AD\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0051\u0052'  # 5240
    u'\u00B9\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0059\u005A\u00B2\uFFFF'  # 5250
    u'\uFFFF\uFFFF\uFFFF\uFFFF\u0038\u0039\u00B3\uFFFF\uFFFF\uFFFF'  # 5260
    u'\uFFFF\u009F\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7'  # 5270
    u'\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6'  # 5280
    u'\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2'  # 5290
    u'\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1'  # 5300
    u'\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB'  # 5310
    u'\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563'  # 5320
    u'\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C'  # 5330
    u'\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550'  # 5340
    u'\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B'  # 5350
    u'\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF'  # 5360
    u'\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4'  # 5370
    u'\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321'  # 5380
    u'\u00F7\u2248\u00B0\u00B7\u2022\u221A\u207F\u00B2\u25A0\u00A0'  # 5390
    u'\u00BD\u00BE\u00AC\u007C\u00AF\u00A8\u00B4\u00D7\u00FF\u00D6'  # 5400
    u'\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00BF\u00AE\u00AC\u00BD'  # 5410
    u'\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1'  # 5420
    u'\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510'  # 5430
    u'\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554'  # 5440
    u'\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB'  # 5450
    u'\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6'  # 5460
    u'\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE'  # 5470
    u'\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1'  # 5480
    u'\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9'  # 5490
    u'\u00B3\u00B2\u25A0\u00A0\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0'  # 5500
    u'\u0386\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0388\u00C4\u0389'  # 5510
    u'\u038A\uFFFF\u038C\u00F4\u00F6\u038E\u00FB\u00F9\u038F\u00D6'  # 5520
    u'\u00DC\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD'  # 5530
    u'\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399'  # 5540
    u'\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039D'  # 5550
    u'\u039C\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534'  # 5560
    u'\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566'  # 5570
    u'\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9'  # 5580
    u'\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580'  # 5590
    u'\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF'  # 5600
    u'\u03C0\u03C1\u03C3\u03C2\u03C4\u00B4\u00AD\u00B1\u03C5\u03C6'  # 5610
    u'\u03C7\u00A7\u03C8\u02DB\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE'  # 5620
    u'\u25A0\u00A0\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7'  # 5630
    u'\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139'  # 5640
    u'\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164'  # 5650
    u'\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105'  # 5660
    u'\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB'  # 5670
    u'\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563'  # 5680
    u'\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C'  # 5690
    u'\u2500\u253C\u0102\u0103\u0111\u0110\u010E\u00CB\u010F\u0147'  # 5700
    u'\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580'  # 5710
    u'\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA'  # 5720
    u'\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7'  # 5730
    u'\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159'  # 5740
    u'\u25A0\u00A0\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404'  # 5750
    u'\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409'  # 5760
    u'\u045A\u040A\u045B\u0093\u045C\u040C\u045E\u040E\u045F\u040F'  # 5770
    u'\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426'  # 5780
    u'\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB'  # 5790
    u'\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563'  # 5800
    u'\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C'  # 5810
    u'\u2500\u253C\u043A\u041A\u043B\u041B\u043C\u041C\u043D\u041D'  # 5820
    u'\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580'  # 5830
    u'\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436'  # 5840
    u'\u0416\u0432\u0412\u044C\u042C\u00B4\u00AD\u044B\u042B\u0437'  # 5850
    u'\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\uFFFF'  # 5860
    u'\u25A0\u00A0\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5'  # 5870
    u'\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED'  # 5880
    u'\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BA\u00AA\u00CA\u00CB'  # 5890
    u'\u00C8\uFFFF\u00CD\u00CE\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5'  # 5900
    u'\u00B5\uFFFF\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u2014\u00B4'  # 5910
    u'\u00AD\u00B1\uFFFF\u00BE\u00B6\u00A7\u00F7\u02DB\u00B0\u00A8'  # 5920
    u'\u02D9\u00B9\u00B3\u00B2\u25A0\u00A0\u00C7\u00FC\u00E9\u00E2'  # 5930
    u'\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CE\u00D4\u00EC'  # 5940
    u'\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9'  # 5950
    u'\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D2\u00BF\u00D3'  # 5960
    u'\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u00EA\u00EB\u00E8\u00D0'  # 5970
    u'\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE'  # 5980
    u'\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u00D2'  # 5990
    u'\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\uFFFF'  # 6000
    u'\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u05E8\u05E9\u05EA\u00A2'  # 6010
    u'\u00A3\u00D9\u20A7\u00D2\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0'  # 6020
    u'\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C0\u00A7'  # 6030
    u'\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4'  # 6040
    u'\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA'  # 6050
    u'\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE'  # 6060
    u'\u00AB\u00BB\u03A6\u0398\u03A9\u03B4\u221E\u2205\u03B5\u2229'  # 6070
    u'\u2218\u00B7\u2022\u221A\u207F\u00B2\u25A0\u00A0\u00B0\u00B7'  # 6080
    u'\u2218\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534'  # 6090
    u'\u2510\u250C\u2514\u2518\u00DF\u221E\u00F8\u00B1\u00BD\u00BC'  # 6100
    u'\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFF\uFFFF\uFEFB\uFEFC\uE016'  # 6110
    u'\uFFFF\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFF\uFFFF\uFE8E\u0628'  # 6120
    u'\u062A\u062B\u060C\u062C\u062D\u062E\u0660\u0661\u0662\u0663'  # 6130
    u'\u0664\u0665\u0666\u0667\u0668\u0669\u06A4\u061B\u0633\u0634'  # 6140
    u'\u0635\u061F\u00A2\u0621\u0622\u0623\u0624\uFECA\u0626\u0627'  # 6150
    u'\uFE91\u0629\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\u062F\u0630\u0631'  # 6160
    u'\u0632\uFEB3\uFEB7\uFEBB\uFEBF\u0637\u0638\uFECB\uFECF\u00A6'  # 6170
    u'\u00AC\u00F7\u00D7\u0639\u0640\uFED2\uFED6\uFEDB\uFEDE\uFEE3'  # 6180
    u'\uFEE6\uFEEB\u0648\u0649\uFEF3\u0636\uFEE2\uFECE\u063A\u0645'  # 6190
    u'\uFE7D\u0651\u0646\u0647\uFEEC\uFEF0\uFEF2\u0641\u0642\uFEF5'  # 6200
    u'\uFEF6\u0644\u0643\u064A\u25A0\u00A0\u00FF\u00D6\u00DC\u00F8'  # 6210
    u'\u00A3\u00D8\u20A7\u0192\u0668\u0669\u060C\u061B\u061F\u0622'  # 6220
    u'\u0627\uFE8E\uE016\u0628\uFE91\u067E\uFFFF\u0629\u062A\uFE97'  # 6230
    u'\uFFFF\uFFFF\u062B\uFE9B\u062C\uFE9F\uFFFF\uFFFF\u062D\uFEA3'  # 6240
    u'\u062E\uFEA7\u062F\uFFFF\u0630\u0631\uFFFF\u0632\uFFFF\u0633'  # 6250
    u'\uFEB3\u0634\u00AB\u00BB\uFEB7\u0635\u2591\u2592\u2593\u2502'  # 6260
    u'\u2524\uFEBB\u0636\uFEBF\u0637\u2563\u2551\u2557\u255D\u0638'  # 6270
    u'\u0639\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFECA\uFECB'  # 6280
    u'\u255A\u2554\u2569\u2566\u2560\u2550\u256C\uFECC\u063A\uFECE'  # 6290
    u'\uFECF\uFED0\u0641\uFED3\u0642\uFED7\uFEDA\u2518\u250C\u2588'  # 6300
    u'\u2580\uFEDB\uFFFF\u2584\uFFFF\u0644\uFEDE\uFEE0\u0645\uFEE3'  # 6310
    u'\uFFFF\u0646\uFEE7\uFFFF\u0648\uFFFF\uFFFF\uFFFF\uFFFF\u0621'  # 6320
    u'\u00AD\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0651'  # 6330
    u'\uFE7D\uFFFF\u25A0\u00A0\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 6340
    u'\u0386\uFFFF\u00B7\u00AC\u00A6\u201B\u2019\u0388\u2014\u0389'  # 6350
    u'\u038A\u03AA\u038C\uFFFF\uFFFF\u038E\u03AB\u00A9\u038F\u00B2'  # 6360
    u'\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u2591\u2592\u2593\u2502'  # 6370
    u'\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E'  # 6380
    u'\u039F\u2510\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385'  # 6390
    u'\u0020\u00A0\uFFFF\u00E4\uFFFF\u00E1\u0103\u010D\u00E7\u0107'  # 6400
    u'\u005B\u002E\u003C\u0028\u002B\u0021\u0026\u00E9\uFFFF\u00EB'  # 6410
    u'\u016F\u00ED\uFFFF\u013E\u013A\u00DF\u005D\u0024\u002A\u0029'  # 6420
    u'\u003B\u005E\u002D\u002F\uFFFF\u00C4\u02DD\u00C1\uFFFF\u010C'  # 6430
    u'\u00C7\u0106\u007C\u002C\u0025\u005F\u003E\u003F\u02C7\u00C9'  # 6440
    u'\uFFFF\u00CB\u016E\u00CD\uFFFF\u013D\u0139\u0060\u003A\u0023'  # 6450
    u'\u0040\u0027\u003D\u0022\u02D8\u0061\u0062\u0063\u0064\u0065'  # 6460
    u'\u0066\u0067\u0068\u0069\u015B\u0148\u0111\u00FD\u0159\uFFFF'  # 6470
    u'\u0071\u0072\u0142\u0144\u0161\u00B8\u02DB\u00A4\u0105\u007E'  # 6480
    u'\u0073\u0074\u0075\u0076\u0077\u0078\u0079\u007A\u015A\u0147'  # 6490
    u'\u0110\u00DD\u0158\uFFFF\u00B7\u0104\u017C\uFFFF\u017B\u00A7'  # 6500
    u'\u00B6\u017E\u017A\u017D\u0179\u0143\u0160\u00A8\u00B4\u00D7'  # 6510
    u'\u0048\u0049\u00AD\u00F4\u00F6\u0155\u00F3\u0151\u0051\u0052'  # 6520
    u'\u011A\u0171\u00FC\u0165\u00FA\u011B\u0059\u005A\u010F\u00D4'  # 6530
    u'\u00D6\u0154\u00D3\u0150\u0038\u0039\u010E\u0170\u00DC\u0164'  # 6540
    u'\u00DA\u009F\u00E7\u00F1\u00FE\u002E\u003C\u0028\u002B\u0021'  # 6550
    u'\u00EC\u00DF\u00C6\u0024\u002A\u0029\u003B\u00D6\u00CC\u00F0'  # 6560
    u'\u003A\u0023\u00D0\u0027\u003D\u0022\u0068\u0069\u00AB\u00BB'  # 6570
    u'\u0060\u00FD\u007B\u00B1\u0071\u0072\u00AA\u00BA\u007D\u00B8'  # 6580
    u'\u005D\u00A4\u00B5\u00F6\u0073\u0074\u0075\u0076\u0077\u0078'  # 6590
    u'\u0079\u007A\u00A1\u00BF\u0040\u00DD\u005B\u00AE\u00BD\u00BE'  # 6600
    u'\u00AC\u007C\u00AF\u00A8\u005C\u00D7\u00DE\u0041\u0042\u0043'  # 6610
    u'\u0044\u0045\u0046\u0047\u0048\u0049\u00AD\u00F4\u007E\u00F2'  # 6620
    u'\u00F3\u00F5\u00E6\u004A\u004B\u004C\u004D\u004E\u004F\u0050'  # 6630
    u'\u00B4\u00F7\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005A'  # 6640
    u'\u00B2\u00D4\u005E\u00D2\u00D3\u00D5\u03AA\u03AB\uFFFF\u002C'  # 6650
    u'\u0025\u005F\u003E\u003F\u00A8\u0386\u0388\u0389\u2207\u038A'  # 6660
    u'\u038C\u038E\u038F\u0060\u003A\u0023\u0040\u0027\u003D\u0022'  # 6670
    u'\u0385\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u00B4\u007E'  # 6680
    u'\u0073\u0074\u0075\u0076\u0077\u0078\u0079\u007A\u03BD\u03BE'  # 6690
    u'\u03BF\u03C0\u03C1\u03C3\u00A3\u03AC\u03AD\u03AE\u0390\u03AF'  # 6700
    u'\u03CC\u03CD\u03B0\u03CE\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8'  # 6710
    u'\u0048\u0049\u00AD\u03C9\u03CA\u03CB\u2018\u2015\u0051\u0052'  # 6720
    u'\u00B1\u00BD\uFFFF\u00B7\u2019\u00A6\u0059\u005A\u00B2\u00A7'  # 6730
    u'\uFFFF\uFFFF\u00AB\u00AC\u0038\u0039\u00B3\u00A9\uFFFF\uFFFF'  # 6740
    u'\u00BB\u009F\u0020\uFFFF\u0452\u0453\u0451\uFFFF\u0455\u0456'  # 6750
    u'\u0457\u0458\u005B\u002E\u003C\u0028\u002B\u0021\u0026\u0459'  # 6760
    u'\u045A\u045B\u045C\uFFFF\u045F\u042A\u2116\u0402\u005D\u0024'  # 6770
    u'\u002A\u0029\u003B\u005E\u002D\u002F\u0403\u0401\uFFFF\u0405'  # 6780
    u'\u0406\u0407\u0408\u0409\u00A6\u002C\u0025\u005F\u003E\u003F'  # 6790
    u'\u040A\u040B\u040C\uFFFF\uFFFF\u040F\u044E\u0430\u0431\uFFFF'  # 6800
    u'\u003A\u0023\u0040\u0027\u003D\u0022\u0446\u0061\u0062\u0063'  # 6810
    u'\u0064\u0065\u0066\u0067\u0068\u0069\u0434\u0435\u0444\u0433'  # 6820
    u'\u0445\u0438\u0439\u006A\u006B\u006C\u006D\u006E\u006F\u0070'  # 6830
    u'\u0071\u0072\u043A\u043B\u043C\u043D\u043E\u043F\u044F\uFFFF'  # 6840
    u'\u0073\u0074\u0075\u0076\u0077\u0078\u0079\u007A\u0440\u0441'  # 6850
    u'\u0442\u0443\u0436\u0432\u0048\u0049\u0425\u0418\u0419\u041A'  # 6860
    u'\u041B\u041C\u0051\u0052\u041D\u041E\u041F\u042F\u0420\u0421'  # 6870
    u'\u005C\u00A4\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005A'  # 6880
    u'\u0422\u0423\u0416\u0412\u042C\u042B\u0038\u0039\u0417\u0428'  # 6890
    u'\u042D\u0429\u0427\u009F\u00A2\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF'  # 6900
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00AC\u00A6\uFFFF'  # 6910
    u'\u0020\uFFFF\u00E2\u00E4\u00E0\u00E1\uFFFF\u010B\u007B\u00F1'  # 6920
    u'\u00C7\u002E\u003C\u0028\u002B\u0021\u00EC\u00DF\u011E\u0130'  # 6930
    u'\u002A\u0029\u003B\u005E\u002D\u002F\u00C2\u00C4\u00C0\u00C1'  # 6940
    u'\uFFFF\u010A\u005B\u00D1\u015F\u002C\u0025\u005F\u003E\u003F'  # 6950
    u'\uFFFF\u00C9\u00CA\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u0131'  # 6960
    u'\u003A\u00D6\u015E\u0027\u003D\u00DC\u0068\u0069\u0127\u0109'  # 6970
    u'\u015D\u016D\uFFFF\u007C\u0071\u0072\u0125\u011D\u0135\u02DB'  # 6980
    u'\uFFFF\u00A4\u0079\u007A\u0126\u0108\u015C\u016C\uFFFF\u0040'  # 6990
    u'\u00B7\u00A3\u017C\u007D\u017B\u00A7\u005D\uFFFF\u00BD\u0024'  # 7000
    u'\u0124\u011C\u0134\u00A8\u00B4\u00D7\u00E7\u0041\u0042\u0043'  # 7010
    u'\u0044\u0045\u0046\u0047\u0048\u0049\u00AD\u00F4\u007E\u00F2'  # 7020
    u'\u00F3\u0121\u011F\u004A\u004B\u004C\u004D\u004E\u004F\u0050'  # 7030
    u'\u0051\u0052\u0060\u00FB\u005C\u00F9\u00FA\uFFFF\u00FC\u00F7'  # 7040
    u'\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005A\u00B2\u00D4'  # 7050
    u'\u0023\u00D2\u00D3\u0120\u0038\u0039\u00B3\u00DB\u0022\u00D9'  # 7060
    u'\u00DA\u009F\u0020\u00A0\u060C\u061B\u061F\u0623\u0627\uFE8E'  # 7070
    u'\uFFFF\u0628\u005B\u002E\u003C\u0028\u002B\u0021\u0026\uFE91'  # 7080
    u'\u067E\uFFFF\u0629\u062A\uFE97\uFFFF\uFFFF\u062B\u005D\u0024'  # 7090
    u'\u002A\u0029\u003B\u005E\u002D\u002F\uFE9B\u062C\uFE9F\uFFFF'  # 7100
    u'\uFFFF\u062D\uFEA3\u062E\u0060\u002C\u0025\u005F\u003E\u003F'  # 7110
    u'\u0668\u0669\u003A\u0023\u0040\u0027\u003D\u0022\uFEA7\u0061'  # 7120
    u'\u0062\u0063\u0064\u0065\u0066\u0067\u0068\u0069\u062F\uFFFF'  # 7130
    u'\u0630\u0631\uFFFF\u0632\u0071\u0072\u0633\uFEB3\u0634\uFEB7'  # 7140
    u'\u0635\uFEBB\u0636\u007E\u0073\u0074\u0075\u0076\u0077\u0078'  # 7150
    u'\u0079\u007A\uFEBF\u0637\u0638\u0639\uFECA\uFECB\uFECC\u063A'  # 7160
    u'\uFECE\uFECF\uFED0\u0641\uFED3\u0642\uFED7\u0643\uFEDB\u007C'  # 7170
    u'\uFFFF\uFFFF\u0644\uFEDE\u0048\u0049\u00AD\uFFFF\u0645\uFEE3'  # 7180
    u'\uFFFF\u0646\u0051\u0052\uFEE7\uFFFF\u0648\uFFFF\uFFFF\uFFFF'  # 7190
    u'\u0059\u005A\u0621\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u0038\u0039'  # 7200
    u'\uFFFF\uFFFF\uFFFF\u0651\uFE7D\u009F\uFFFF\uFFFF\u201A\uFFFF'  # 7210
    u'\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFF'  # 7220
    u'\uFFFF\uFFFF\uFFFF\u2018\u2019\u201C\u201D\u2022\u2013\u2014'  # 7230
    u'\u02DC\u2122\u0161\u203A\u0153\uFFFF\uFFFF\u0178\u0068\u0069'  # 7240
    u'\u00AB\u00BB\u007D\u0060\u00A6\u00B1\u0071\u0072\u00AA\u00BA'  # 7250
    u'\u00E6\u02DB\u00C6\u00A4\u0079\u007A\u00A1\u00BF\u005D\u0024'  # 7260
    u'\u0040\u00AE\u00BD\u00BE\u00AC\u007C\u2014\u00A8\u00B4\u00D7'  # 7270
    u'\u0051\u0052\u00B9\u00FB\u005C\u00F9\u00FA\u00FF\u0059\u005A'  # 7280
    u'\u00B2\u00D4\u0023\u00D2\u00D3\u00D5\u00EC\u00DF\u0021\u0024'  # 7290
    u'\u002A\u0029\u003B\u005E\u0079\u007A\u00A1\u00BF\u00D0\u005B'  # 7300
    u'\u00DE\u00AE\u00AC\u00A3\u00A5\u00B7\u00A9\u00A7\u00B6\u00BC'  # 7310
    u'\u00BD\u00BE\u00DD\u00A8\u00AF\u005D\u00B4\u00D7\u20AC\uFFFF'  # 7320
    u'\u201A\uFFFF\u201E\u2026\u2020\u2021\uFFFF\u2030\u0160\u2039'  # 7330
    u'\u015A\u0164\u017D\u0179\uFFFF\u2122\u0161\u203A\u015B\u0165'  # 7340
    u'\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7'  # 7350
    u'\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1'  # 7360
    u'\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB'  # 7370
    u'\u013D\u02DD\u013E\u017C\u0402\u0403\u201A\u0453\u201E\u2026'  # 7380
    u'\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F'  # 7390
    u'\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFF\u2122'  # 7400
    u'\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408'  # 7410
    u'\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD'  # 7420
    u'\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7'  # 7430
    u'\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u20AC\uFFFF'  # 7440
    u'\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039'  # 7450
    u'\u0152\uFFFF\u017D\u017E\uFFFF\u2030\uFFFF\u2039\uFFFF\uFFFF'  # 7460
    u'\uFFFF\uFFFF\uFFFF\u2122\uFFFF\u203A\uFFFF\uFFFF\uFFFF\uFFFF'  # 7470
    u'\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9'  # 7480
    u'\uFFFF\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3'  # 7490
    u'\u0384\u00B5\u00B6\u00B7\u05E8\u05E9\u05EA\uFFFF\uFFFF\u200E'  # 7500
    u'\u200F\uFFFF\u20AC\u0660\u201A\u0661\u201E\u2026\u2020\u2021'  # 7510
    u'\u0662\u0663\u0664\u2039\u0665\u0666\u0667\u0668\u0669\u2018'  # 7520
    u'\u2019\u201C\u201D\u2022\u2013\u2014\u061B\u2122\u061F\u203A'  # 7530
    u'\u0621\u0622\u0623\u0178\u00A0\u0624\u0625\u00A3\u00A4\u0626'  # 7540
    u'\u00A6\u00A7\u0627\u00A9\u0628\u00AB\u00AC\u00AD\u00AE\u067E'  # 7550
    u'\u00B0\u00B1\u0629\u062A\u062B\u00B5\u00B6\u00B7\u062C\u0686'  # 7560
    u'\u062D\u00BB\u062E\u062F\u0630\u0631\u00C0\u0632\u00C2\u0698'  # 7570
    u'\u0633\u0634\u0635\u00C7\u00C8\u00C9\u00CA\u00CB\u0636\u0637'  # 7580
    u'\u00CE\u00CF\u3113\u0639\u063A\u0640\u00D4\u0641\u0642\u00D7'  # 7590
    u'\u0643\u00D9\u06AF\u00DB\u00DC\u0644\u0645\u0646\u00E0\u0647'  # 7600
    u'\u00E2\u0681\u0648\u0649\u064A\u00E7\u00E8\u00E9\u00EA\u00EB'  # 7610
    u'\u064B\u064C\u00EE\u00EF\u064D\u064E\u064F\u0650\u00F4\u0651'  # 7620
    u'\u0652\u00F7\uFFFF\u00F9\uFFFF\u00FB\u00FC\u200E\u200F\u00FF'  # 7630
    u'\u00A0\uFFFF\u00A2\u00A3\u00A4\uFFFF\u00A6\u00A7\u00D8\u00A9'  # 7640
    u'\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00F8\u00B9\u0157\u00BB'  # 7650
    u'\u00BC\u00BD\u00BE\u00E6\u0173\u0142\u015B\u016B\u00FC\u017C'  # 7660
    u'\u017E\uFFFF\uFFFF\uFFFF\u00C4\u002E\u003C\u0028\u002B\u0021'  # 7670
    u'\uFFFF\uFFFF\u00DC\u0024\u002A\u0029\u003B\u005E\uFFFF\uFFFF'  # 7680
    u'\u00F6\u002C\u0025\u005F\u003E\u003F\uFFFF\u0060\u003A\u0023'  # 7690
    u'\u00A7\u0027\u003D\u0022\uFFFF\u00DF\u0073\u0074\u0075\u0076'  # 7700
    u'\u0077\u0078\u00D6\uFFFF\u0053\u0054\u0055\u0056\u0057\u0058'  # 7710
    u'\uFFFF\uFFFF\u00F6\u002E\u003C\u0028\u002B\u007C\uFFFF\uFFFF'  # 7720
    u'\u00FC\u00DC\u002A\u0029\u003B\u00AC\uFFFF\uFFFF\u00DF\u002C'  # 7730
    u'\u0025\u005F\u003E\u003F\uFFFF\uFFFF\u003A\u00C4\u00D6\u0027'  # 7740
    u'\u003D\u00E4\uFFFF\uFFFF\u0073\u0074\u0075\u0076\u0077\u0078'  # 7750
    u'\uFFFF\uFFFF\u0053\u0054\u0055\u0056\u0057\u0058\u0020\uFFFF'  # 7760
    u'\u00E2\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00E7\uFFFF\u00E0\u002E'  # 7770
    u'\u003C\u0028\u002B\u0021\u0026\uFFFF\u00EA\u00EB\uFFFF\uFFFF'  # 7780
    u'\u00EE\u00EF\uFFFF\uFFFF\u00B4\u0024\u002A\u0029\u003B\u005E'  # 7790
    u'\u002D\u002F\u00C2\uFFFF\u00C0\uFFFF\uFFFF\uFFFF\u00C7\uFFFF'  # 7800
    u'\u00F9\u002C\u0025\u005F\u003E\u003F\uFFFF\u00C9\u00CA\u00CB'  # 7810
    u'\uFFFF\u00CE\u00CF\uFFFF\u0048\u0049\uFFFF\u00F4\uFFFF\uFFFF'  # 7820
    u'\uFFFF\uFFFF\u0051\u0052\uFFFF\u00FB\u00FC\uFFFF\uFFFF\uFFFF'  # 7830
    u'\u00B8\uFFFF\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005A'  # 7840
    u'\uFFFF\u00D4\uFFFF\uFFFF\uFFFF\uFFFF\u0038\u0039\uFFFF\u00DB'  # 7850
    u'\u00DC\u00D9\uFFFF\u009F\uFFFF\uFFFF\u0023\u002E\u003C\u0028'  # 7860
    u'\u002B\u0021\uFFFF\uFFFF\u00A4\u00C5\u002A\u0029\u003B\u005E'  # 7870
    u'\uFFFF\uFFFF\u00F8\u002C\u0025\u005F\u003E\u003F\uFFFF\u0060'  # 7880
    u'\u003A\u00C6\u00D8\u0027\u003D\u0022\uFFFF\u00FC\u0073\u0074'  # 7890
    u'\u0075\u0076\u0077\u0078\uFFFF\uFFFF\u00F8\u002E\u003C\u0028'  # 7900
    u'\u002B\u007C\uFFFF\uFFFF\u00E5\u00C5\u002A\u0029\u003B\u00AC'  # 7910
    u'\uFFFF\uFFFF\u003A\u00C6\u00D8\u0027\u003D\u00E6\uFFFF\uFFFF'  # 7920
    u'\u00A7\u002E\u003C\u0028\u002B\u0021\uFFFF\u00E9\u003A\u00C4'  # 7930
    u'\u00D6\u0027\u003D\u0022\u00C9\uFFFF\u0053\u0054\u0055\u0056'  # 7940
    u'\u0057\u0058\uFFFF\uFFFF\u00B0\u002E\u003C\u0028\u002B\u0021'  # 7950
    u'\uFFFF\uFFFF\u00A7\u0024\u002A\u0029\u003B\u005E\uFFFF\u0060'  # 7960
    u'\u003A\u00A3\u00E0\u0027\u003D\u0022\uFFFF\uFFFF\u00E9\u0024'  # 7970
    u'\u002A\u0029\u003B\u005E\uFFFF\uFFFF\u00F2\u002C\u0025\u005F'  # 7980
    u'\u003E\u003F\uFFFF\u00F9\u003A\u00A3\u00A7\u0027\u003D\u0022'  # 7990
    u'\uFFFF\u00EC\u0073\u0074\u0075\u0076\u0077\u0078\uFFFF\uFFFF'  # 8000
    u'\u00F5\u002C\u0025\u005F\u003E\u003F\uFFFF\u0060\u003A\u00C3'  # 8010
    u'\u00D5\u0027\u003D\u0022\uFFFF\u00E7\u0073\u0074\u0075\u0076'  # 8020
    u'\u0077\u0078\u00E3\u0041\u0042\u0043\u0044\u0045\u0046\u0047'  # 8030
    u'\u00C7\uFFFF\u0053\u0054\u0055\u0056\u0057\u0058\uFFFF\uFFFF'  # 8040
    u'\u00A2\u002E\u003C\u0028\u002B\u007C\uFFFF\uFFFF\u0021\u20A7'  # 8050
    u'\u002A\u0029\u003B\u00AC\uFFFF\uFFFF\u00F1\u002C\u0025\u005F'  # 8060
    u'\u003E\u003F\uFFFF\u0060\u003A\u00D1\u0040\u0027\u003D\u0022'  # 8070
    u'\uFFFF\uFFFF\u003A\u00D1\u0040\u0027\u003D\u00F1\uFFFF\uFFFF'  # 8080
    u'\u0021\u0024\u002A\u0029\u003B\u00AC\uFFFF\uFFFF\u0024\u002E'  # 8090
    u'\u003C\u0028\u002B\u007C\uFFFF\uFFFF\u0021\u00A3\u002A\u0029'  # 8100
    u'\u003B\u00AC\u0020\uFFFF\uFFFF\uFFFF\uFFFF\u00E1\uFFFF\uFFFF'  # 8110
    u'\uFFFF\uFFFF\u003C\u002E\u00C1\u0028\u002B\u0021\u00D0\u00E9'  # 8120
    u'\uFFFF\uFFFF\uFFFF\u00ED\uFFFF\uFFFF\uFFFF\u0024\u0025\u00C9'  # 8130
    u'\u002A\u0029\u003B\u0026\uFFFF\u0023\u2018\u002C\u00DE\u005F'  # 8140
    u'\u003E\u003F\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u00CD\uFFFF\uFFFF'  # 8150
    u'\u007C\u00F0\u003A\u00C6\u00D6\u0027\u003D\u0022\u0068\u0069'  # 8160
    u'\uFFFF\uFFFF\uFFFF\u00DD\uFFFF\uFFFF\u00B0\u00F6\u0073\u0074'  # 8170
    u'\u0075\u0076\u0077\u0078\u0079\u007A\uFFFF\uFFFF\u005B\u00FD'  # 8180
    u'\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\uFFFF\u005D\u00A8\uFFFF\uFFFF'  # 8190
    u'\u00FE\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049'  # 8200
    u'\uFFFF\uFFFF\uFFFF\uFFFF\u00F3\uFFFF\u0051\u0052\uFFFF\uFFFF'  # 8210
    u'\uFFFF\uFFFF\u00FA\uFFFF\u00B4\uFFFF\u0053\u0054\u0055\u0056'  # 8220
    u'\u0057\u0058\u0059\u005A\uFFFF\uFFFF\uFFFF\uFFFF\u00D3\uFFFF'  # 8230
    u'\u0038\u0039\uFFFF\uFFFF\uFFFF\uFFFF\u00DA\u007F\u042C\u042B'  # 8240
    u'\u0417\u0428\u042D\u0429\u0427\uFFFF\u2500\u2502\u250C\u2510'  # 8250
    u'\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588'  # 8260
    u'\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2022\u221A\u2248'  # 8270
    u'\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551'  # 8280
    u'\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A'  # 8290
    u'\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563'  # 8300
    u'\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9'  # 8310
    u'\u2591\u2592\u2593\u201C\u25A0\u2022\u201D\u2014\u2116\u2122'  # 8320
    u'\u00A0\u00BB\u00AE\u00AB\u00B7\u00A4\u2550\u2551\u2552\u0451'  # 8330
    u'\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491'  # 8340
    u'\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407'  # 8350
    u'\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u2591\u2592'  # 8360
    u'\u2593\u2320\u25A0\u2219\u221A\u2248\u2557\u2558\u2559\u255A'  # 8370
    u'\u255B\u0491\u255D\u255E\u2566\u2567\u2568\u2569\u256A\u0490'  # 8380
    u'\u256C\u00A9\u00EA\u00EB\u00E8\u00EF\u00EE\u00CD\u00C4\u00C1'  # 8390
    u'\u00C9\u00E6\u00C6\u0151\u00F6\u00D3\u0171\u00DA\u0170\u00D6'  # 8400
    u'\u00DC\u00A2\u00A3\u00A5\u20A7\uE01F\u00E1\u00ED\u00F3\u00FA'  # 8410
    u'\u00F1\u00D1\u00AA\u0150\u03B1\u03B2\u0393\u03C0\u03A3\u03C3'  # 8420
    u'\u03BC\u03C4\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1'  # 8430
    u'\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E'  # 8440
    u'\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5'  # 8450
    u'\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2219'  # 8460
    u'\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u01F5\u012E'  # 8470
    u'\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B'  # 8480
    u'\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A'  # 8490
    u'\u0144\u0147\u0394\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5'  # 8500
    u'\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25C6'  # 8510
    u'\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160'  # 8520
    u'\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D'  # 8530
    u'\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171'  # 8540
    u'\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7'  # 8560
    )

class StripCodec_0(recode.StripStep):
    external_coding = 'ISO_646.basic'
    data = unicode_data_pool
    indices = (0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56,
            64, 72, 80, 88, 96, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_1(recode.StripStep):
    external_coding = 'INVARIANT'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 8, 16, 24, 32, 40, 48, 56,
            64, 72, 80, 88, 136, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_2(recode.StripStep):
    external_coding = 'ISO_646.irv'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 176, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_3(recode.StripStep):
    external_coding = 'BS_4730'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 176, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_4(recode.StripStep):
    external_coding = 'ANSI_X3.4-1968'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_5(recode.StripStep):
    external_coding = 'NATS-SEFI'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 208, 48, 56,
            216, 224, 80, 88, 232, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_6(recode.StripStep):
    external_coding = 'NATS-SEFI-ADD'
    data = unicode_data_pool
    indices = (0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 248,
            256, 264, 0, 272, 280, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_7(recode.StripStep):
    external_coding = 'NATS-DANO'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 288, 16, 24, 32, 208, 48, 56,
            296, 224, 80, 88, 304, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_8(recode.StripStep):
    external_coding = 'NATS-DANO-ADD'
    data = unicode_data_pool
    indices = (0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 248,
            312, 264, 0, 272, 320, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_9(recode.StripStep):
    external_coding = 'SEN_850200_B'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            328, 168, 80, 88, 336, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_10(recode.StripStep):
    external_coding = 'SEN_850200_C'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 344, 48, 56,
            352, 360, 80, 88, 368, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_11(recode.StripStep):
    external_coding = 'JIS_C6220-1969-jp'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 376, 384, 392, 400, 408, 416, 424,
            432, 0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_12(recode.StripStep):
    external_coding = 'JIS_C6220-1969-ro'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            448, 168, 80, 88, 176, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_13(recode.StripStep):
    external_coding = 'IT'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 456, 48, 56,
            464, 472, 80, 88, 480, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_14(recode.StripStep):
    external_coding = 'PT'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 456, 48, 56,
            488, 168, 80, 88, 496, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_15(recode.StripStep):
    external_coding = 'ES'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 456, 48, 56,
            504, 168, 80, 88, 512, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_16(recode.StripStep):
    external_coding = 'greek7-old'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 520, 528, 536,
            544, 552, 560, 568, 576, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_17(recode.StripStep):
    external_coding = 'latin-greek'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 152, 48, 56,
            160, 552, 560, 568, 584, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_18(recode.StripStep):
    external_coding = 'DIN_66003'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 456, 48, 56,
            592, 168, 80, 88, 600, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_19(recode.StripStep):
    external_coding = 'NF_Z_62-010_(1973)'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 608, 48, 56,
            616, 168, 80, 88, 624, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_20(recode.StripStep):
    external_coding = 'Latin-greek-1'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 632, 16, 24, 640, 648, 48, 56,
            656, 168, 80, 88, 176, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_21(recode.StripStep):
    external_coding = 'ISO_5427'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 664, 672, 680,
            688, 696, 704, 712, 720, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_22(recode.StripStep):
    external_coding = 'BS_viewdata'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 152, 48, 56,
            728, 168, 80, 88, 736, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_23(recode.StripStep):
    external_coding = 'INIS'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 744, 16, 24, 752, 40, 48, 56,
            760, 72, 80, 88, 768, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_24(recode.StripStep):
    external_coding = 'INIS-8'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 776, 0, 0, 784, 0, 0, 0,
            792, 800, 808, 816, 824, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_25(recode.StripStep):
    external_coding = 'INIS-cyrillic'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 776, 832, 840, 848, 664, 672, 680,
            688, 696, 704, 712, 720, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_26(recode.StripStep):
    external_coding = 'ISO_5427-ext'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 776, 0, 0, 0, 856, 864, 872,
            880, 888, 896, 904, 440, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_27(recode.StripStep):
    external_coding = 'ISO_5428'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 912, 0, 920, 928, 936, 944, 952,
            960, 968, 976, 984, 992, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_28(recode.StripStep):
    external_coding = 'GB_1988-80'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 1000, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 176, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_29(recode.StripStep):
    external_coding = 'NS_4551-1'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            1008, 168, 80, 88, 1016, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_30(recode.StripStep):
    external_coding = 'NS_4551-2'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 1024, 16, 24, 32, 152, 48, 56,
            1008, 168, 80, 88, 1032, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_31(recode.StripStep):
    external_coding = 'NF_Z_62-010'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 184, 16, 24, 32, 608, 48, 56,
            616, 1040, 80, 88, 624, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_32(recode.StripStep):
    external_coding = 'PT2'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 1048, 48, 56,
            488, 168, 80, 88, 1056, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_33(recode.StripStep):
    external_coding = 'ES2'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 1064, 48, 56,
            1072, 168, 80, 88, 1080, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_34(recode.StripStep):
    external_coding = 'MSZ_7795.3'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 1088, 48, 56,
            1096, 1104, 80, 88, 1112, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_35(recode.StripStep):
    external_coding = 'greek7'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 1120, 1128, 1136,
            1144, 1152, 1160, 1168, 1176, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_36(recode.StripStep):
    external_coding = 'ASMO_449'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 1184, 24, 1192, 1200, 1208, 1216,
            1224, 1232, 1240, 1248, 1256, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_37(recode.StripStep):
    external_coding = 'JIS_C6229-1984-a'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 1264, 16, 24, 1272, 40, 48, 56,
            1280, 0, 0, 0, 1288, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_38(recode.StripStep):
    external_coding = 'JIS_C6229-1984-b'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            1296, 72, 80, 88, 1304, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_39(recode.StripStep):
    external_coding = 'JIS_C6229-1984-b-add'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 1312, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_40(recode.StripStep):
    external_coding = 'JIS_C6229-1984-hand'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            1296, 0, 0, 0, 1320, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_41(recode.StripStep):
    external_coding = 'JIS_C6229-1984-hand-add'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 1328, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_42(recode.StripStep):
    external_coding = 'JIS_C6229-1984-kana'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 1336, 0, 392, 400, 408, 416, 424,
            432, 0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_43(recode.StripStep):
    external_coding = 'ISO_2033-1983'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 776, 0, 24, 1344, 0, 0, 0,
            0, 0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_44(recode.StripStep):
    external_coding = 'ISO-8859-1'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1384, 1392,
            1400, 1408, 1416, 1424, 1432, 1440, 1448, 1456, 1464, 1472)

class StripCodec_45(recode.StripStep):
    external_coding = 'ISO-8859-2'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1480, 1488,
            1496, 1504, 1512, 1520, 1528, 1536, 1544, 1552, 1560, 1568)

class StripCodec_46(recode.StripStep):
    external_coding = 'T.61-7bit'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            1576, 72, 80, 88, 768, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_47(recode.StripStep):
    external_coding = 'ISO-8859-3'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1584, 1592,
            1600, 1608, 1616, 1424, 1624, 1632, 1640, 1456, 1648, 1656)

class StripCodec_48(recode.StripStep):
    external_coding = 'ISO-8859-4'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1664, 1672,
            1680, 1688, 1696, 1704, 1712, 1720, 1728, 1736, 1744, 1752)

class StripCodec_49(recode.StripStep):
    external_coding = 'ECMA-cyrillic'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1760, 1768,
            1776, 1784, 664, 672, 680, 688, 696, 704, 712, 1792)

class StripCodec_50(recode.StripStep):
    external_coding = 'CSA_Z243.4-1985-1'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 608, 48, 56,
            1800, 1808, 80, 88, 1816, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_51(recode.StripStep):
    external_coding = 'CSA_Z243.4-1985-2'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 608, 48, 56,
            1824, 1808, 80, 88, 1816, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_52(recode.StripStep):
    external_coding = 'CSA_Z243.4-1985-gr'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1832, 1840,
            800, 1848, 1856, 1864, 1872, 1880, 1888, 1896, 1904, 1912)

class StripCodec_53(recode.StripStep):
    external_coding = 'ISO-8859-7'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1920, 1928,
            1936, 1944, 1952, 1960, 1968, 1976, 1984, 1992, 2000, 2008)

class StripCodec_54(recode.StripStep):
    external_coding = 'ISO-8859-6'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2016, 2024,
            0, 2032, 2040, 1208, 1216, 2048, 1232, 1240, 1248, 0)

class StripCodec_55(recode.StripStep):
    external_coding = 'ISO-8859-8'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2056, 2064,
            1400, 2072, 0, 0, 0, 2080, 2088, 2096, 2104, 2112)

class StripCodec_56(recode.StripStep):
    external_coding = 'CSN_369103'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2120, 1488,
            1496, 1504, 1512, 1520, 1528, 1536, 1544, 1552, 1560, 1568)

class StripCodec_57(recode.StripStep):
    external_coding = 'JUS_I.B1.002'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 2128, 48, 56,
            2136, 2144, 80, 88, 2152, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_58(recode.StripStep):
    external_coding = 'IEC_P27-1'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2160, 2168,
            2176, 2184, 2192, 2200, 2208, 2216, 2224, 2232, 2240, 2248)

class StripCodec_59(recode.StripStep):
    external_coding = 'ISO-8859-5'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2256, 2264,
            2272, 2280, 2288, 2296, 2304, 2312, 2320, 2328, 2336, 2344)

class StripCodec_60(recode.StripStep):
    external_coding = 'JUS_I.B1.003-serb'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 2352, 2360, 2368,
            2376, 2384, 2392, 2400, 2408, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_61(recode.StripStep):
    external_coding = 'JUS_I.B1.003-mac'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 2352, 2360, 2368,
            2416, 2384, 2392, 2400, 2424, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_62(recode.StripStep):
    external_coding = 'ISO-8859-9'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 1384, 1392,
            1400, 1408, 1416, 1424, 2432, 2440, 1448, 2448, 2456, 2464)

class StripCodec_63(recode.StripStep):
    external_coding = 'greek-ccitt'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 1120, 1960, 1968,
            2472, 2480, 1992, 2000, 2488, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_64(recode.StripStep):
    external_coding = 'NC_NC00-10'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            2496, 168, 80, 88, 2504, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_65(recode.StripStep):
    external_coding = 'ISO_6937-2-25'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2512, 2520,
            0, 2528, 0, 0, 2536, 2544, 2552, 2560, 2568, 2576)

class StripCodec_66(recode.StripStep):
    external_coding = 'GOST_19768-87'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2584, 2592,
            2272, 2280, 2288, 2296, 2304, 2312, 2320, 2328, 2600, 0)

class StripCodec_67(recode.StripStep):
    external_coding = 'ISO_8859-supp'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2608, 2616,
            2624, 2632, 2640, 2648, 2656, 2664, 2672, 2680, 2688, 2696)

class StripCodec_68(recode.StripStep):
    external_coding = 'ISO_10367-box'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 0, 0,
            0, 0, 2704, 2712, 2720, 2728, 0, 0, 0, 0)

class StripCodec_69(recode.StripStep):
    external_coding = 'ISO-8859-10'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2736, 2744,
            2752, 2760, 1696, 2768, 2776, 2784, 1728, 2792, 2800, 2808)

class StripCodec_70(recode.StripStep):
    external_coding = 'ISO-8859-13'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2816, 1392,
            2824, 1408, 2832, 2840, 2848, 2856, 2864, 2872, 2880, 2888)

class StripCodec_71(recode.StripStep):
    external_coding = 'ISO-8859-14'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2896, 2904,
            2912, 2920, 1416, 1424, 2928, 2936, 1448, 1456, 2944, 2952)

class StripCodec_72(recode.StripStep):
    external_coding = 'ISO-8859-15'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2960, 2968,
            2976, 2984, 1416, 1424, 1432, 1440, 1448, 1456, 1464, 1472)

class StripCodec_73(recode.StripStep):
    external_coding = 'sami'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 2992, 0,
            3000, 0, 3008, 3016, 0, 0, 3024, 3032, 0, 0)

class StripCodec_74(recode.StripStep):
    external_coding = 'baltic'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 3040, 3048,
            1400, 3056, 3064, 3072, 3080, 3088, 3096, 3104, 3112, 3120)

class StripCodec_75(recode.StripStep):
    external_coding = 'DS_2089'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            1008, 168, 80, 88, 3128, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_76(recode.StripStep):
    external_coding = 'JIS_X0201'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            448, 168, 80, 88, 176, 1352, 1360, 1368, 1376, 3136, 384,
            392, 400, 408, 416, 424, 432, 0, 0, 0, 0)

class StripCodec_77(recode.StripStep):
    external_coding = 'KSC5636'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            3144, 168, 80, 88, 200, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_78(recode.StripStep):
    external_coding = 'DEC-MCS'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 3152, 3160,
            3168, 3176, 1416, 1424, 3184, 3192, 1448, 1456, 3200, 3208)

class StripCodec_79(recode.StripStep):
    external_coding = 'hp-roman8'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 1352, 1360, 1368, 1376, 3216, 3224,
            3232, 3240, 3248, 3256, 3264, 3272, 3280, 3288, 3296, 3304)

class StripCodec_80(recode.StripStep):
    external_coding = 'NeXTSTEP'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 3312, 1424, 3320, 3328, 3336, 3344,
            3352, 3360, 3368, 3376, 3384, 3392, 3400, 3408, 3416, 3424)

class StripCodec_81(recode.StripStep):
    external_coding = 'macintosh'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 3432, 3440, 3448, 3456, 3464, 3472,
            3480, 3488, 3496, 3504, 3512, 3520, 3528, 3536, 3544, 3552)

class StripCodec_82(recode.StripStep):
    external_coding = 'mac-is'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 3432, 3440, 3448, 3456, 3464, 3472,
            3480, 3488, 3496, 3560, 3568, 3576, 3528, 3536, 3544, 3552)

class StripCodec_83(recode.StripStep):
    external_coding = 'IBM037'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 3656, 3664,
            3672, 3680, 3688, 3696, 3704, 3712, 3720, 3728, 3736, 3744, 3752,
            3760, 3768, 3776, 3784, 3792, 3800, 3808, 3816, 24, 3824)

class StripCodec_84(recode.StripStep):
    external_coding = 'IBM038'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 3832, 3840,
            3848, 3856, 3864, 0, 3872, 72, 3880, 3888, 3896, 3904, 3912,
            0, 0, 3776, 3920, 3792, 3928, 3936, 3944, 24, 3952)

class StripCodec_85(recode.StripStep):
    external_coding = 'IBM256'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 3960, 3664,
            3968, 3680, 3688, 3696, 3704, 3712, 3720, 3728, 3736, 3744, 3752,
            3976, 3984, 3776, 3784, 3792, 3800, 3992, 3816, 24, 3824)

class StripCodec_86(recode.StripStep):
    external_coding = 'IBM273'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4000, 4008, 3664,
            4016, 4024, 4032, 3696, 4040, 3712, 3720, 3728, 3736, 4048, 3752,
            4056, 4064, 4072, 4080, 4088, 4096, 4104, 4112, 24, 4120)

class StripCodec_87(recode.StripStep):
    external_coding = 'IBM274'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 3832, 3840,
            3848, 3856, 4128, 0, 4136, 72, 3880, 3888, 3896, 4144, 3912,
            0, 0, 4152, 3920, 4160, 3928, 4168, 3944, 24, 3952)

class StripCodec_88(recode.StripStep):
    external_coding = 'IBM275'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 4176, 3840,
            4184, 3856, 4192, 0, 4200, 72, 3880, 3888, 3896, 3904, 3912,
            0, 0, 4208, 3920, 4216, 3928, 3936, 3944, 24, 3952)

class StripCodec_89(recode.StripStep):
    external_coding = 'IBM277'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4224, 4232, 3664,
            4240, 4248, 4256, 4264, 4272, 4280, 3720, 3728, 4288, 4296, 3752,
            4304, 4064, 4312, 3784, 4320, 4328, 3808, 3816, 24, 3824)

class StripCodec_90(recode.StripStep):
    external_coding = 'IBM278'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4336, 4344, 4352,
            4240, 4360, 4032, 3696, 4368, 3712, 3720, 3728, 4376, 4296, 3752,
            4384, 4064, 4072, 4080, 4320, 4328, 3808, 4392, 24, 3824)

class StripCodec_91(recode.StripStep):
    external_coding = 'IBM280'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4400, 4408, 4416,
            4424, 3680, 4432, 3696, 4440, 3712, 3720, 4448, 3736, 4456, 3752,
            4464, 4064, 608, 4472, 4160, 4480, 4488, 3816, 24, 3824)

class StripCodec_92(recode.StripStep):
    external_coding = 'IBM281'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 4496, 3840,
            4504, 3856, 3864, 0, 3872, 72, 3880, 3888, 3896, 4512, 3912,
            0, 0, 3776, 3920, 3792, 3928, 4520, 3944, 24, 3952)

class StripCodec_93(recode.StripStep):
    external_coding = 'IBM284'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 4528, 3664,
            4536, 3680, 4544, 3696, 4552, 3712, 3720, 3728, 3736, 4560, 3752,
            4304, 4568, 3776, 3784, 3792, 3800, 3808, 3816, 24, 3824)

class StripCodec_94(recode.StripStep):
    external_coding = 'IBM285'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 4576, 3664,
            4584, 3680, 3688, 3696, 3704, 3712, 3720, 3728, 3736, 4592, 3752,
            4600, 4608, 3776, 3784, 3792, 3800, 3808, 3816, 24, 3824)

class StripCodec_95(recode.StripStep):
    external_coding = 'IBM290'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 376, 4616, 4624,
            4632, 3856, 3864, 0, 3872, 4640, 4648, 4656, 4664, 4672, 4680,
            0, 4688, 40, 3920, 4696, 3928, 4520, 3944, 24, 3952)

class StripCodec_96(recode.StripStep):
    external_coding = 'IBM297'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4704, 4408, 4712,
            4720, 3680, 4728, 3696, 4736, 3712, 3720, 4448, 3736, 4744, 3752,
            4752, 4760, 4152, 3784, 4160, 4768, 4488, 3816, 24, 3824)

class StripCodec_97(recode.StripStep):
    external_coding = 'IBM420'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4776, 4784, 4792,
            4800, 4808, 4816, 4824, 4832, 4840, 4848, 4856, 4864, 4872, 4880,
            4888, 4896, 4904, 4912, 4920, 4928, 4936, 4944, 24, 4952)

class StripCodec_98(recode.StripStep):
    external_coding = 'IBM423'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4960, 4968, 4976,
            4984, 4992, 5000, 5008, 5016, 5024, 5032, 5040, 5048, 5056, 5064,
            5072, 5080, 5088, 5096, 5104, 5112, 5120, 5128, 24, 5136)

class StripCodec_99(recode.StripStep):
    external_coding = 'IBM424'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 5144, 5152, 5160,
            5168, 5176, 5184, 5192, 5200, 72, 5208, 3728, 5216, 3744, 5224,
            3760, 5232, 3776, 5240, 3792, 5248, 3808, 5256, 24, 5264)

class StripCodec_100(recode.StripStep):
    external_coding = 'IBM437'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5272, 5280, 5288, 5296, 5304, 5312,
            5320, 5328, 5336, 5344, 5352, 5360, 5368, 5376, 5384, 5392)

class StripCodec_101(recode.StripStep):
    external_coding = 'IBM500'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 3960, 3664,
            3968, 3680, 3688, 3696, 3704, 3712, 3720, 3728, 3736, 3744, 3752,
            4304, 5400, 3776, 3784, 3792, 3800, 3808, 3816, 24, 3824)

class StripCodec_102(recode.StripStep):
    external_coding = 'IBM850'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5272, 5280, 5288, 5408, 5304, 5416,
            5424, 5432, 5440, 5448, 5456, 5464, 5472, 5480, 5488, 5496)

class StripCodec_103(recode.StripStep):
    external_coding = 'IBM851'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5504, 5512, 5520, 5528, 5536, 5544,
            5552, 5560, 5568, 5576, 5584, 5592, 5600, 5608, 5616, 5624)

class StripCodec_104(recode.StripStep):
    external_coding = 'IBM852'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5632, 5640, 5648, 5656, 5664, 5672,
            5680, 5688, 5696, 5448, 5704, 5712, 5720, 5728, 5736, 5744)

class StripCodec_105(recode.StripStep):
    external_coding = 'IBM855'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5752, 5760, 5768, 5776, 5784, 5792,
            5800, 5808, 5816, 5448, 5824, 5832, 5840, 5848, 5856, 5864)

class StripCodec_106(recode.StripStep):
    external_coding = 'IBM857'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5272, 5872, 5288, 5880, 5888, 5416,
            5424, 5432, 5440, 5448, 5896, 5464, 5904, 5912, 5920, 5928)

class StripCodec_107(recode.StripStep):
    external_coding = 'IBM860'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5936, 5944, 5952, 5960, 5304, 5968,
            5320, 5328, 5336, 5344, 5352, 5360, 5368, 5376, 5384, 5392)

class StripCodec_108(recode.StripStep):
    external_coding = 'IBM861'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5272, 5976, 5984, 5992, 6000, 6008,
            5320, 5328, 5336, 5344, 5352, 5360, 5368, 5376, 5384, 5392)

class StripCodec_109(recode.StripStep):
    external_coding = 'IBM862'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 2088, 2096, 2104, 6016, 5304, 6008,
            5320, 5328, 5336, 5344, 5352, 5360, 5368, 5376, 5384, 5392)

class StripCodec_110(recode.StripStep):
    external_coding = 'IBM863'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 6024, 6032, 6040, 6048, 6056, 6064,
            5320, 5328, 5336, 5344, 5352, 5360, 5368, 6072, 5384, 6080)

class StripCodec_111(recode.StripStep):
    external_coding = 'IBM864'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 6088, 6096, 6104, 6112, 6120, 6128,
            6136, 6144, 6152, 6160, 6168, 6176, 6184, 6192, 6200, 6208)

class StripCodec_112(recode.StripStep):
    external_coding = 'IBM865'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5272, 5280, 5288, 6216, 5304, 5312,
            5320, 5328, 5336, 5344, 5352, 5360, 5368, 6072, 5384, 6080)

class StripCodec_113(recode.StripStep):
    external_coding = 'IBM868'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 6136, 6224, 6232, 6240, 6248, 6256,
            6264, 6272, 6280, 6288, 6296, 6304, 6312, 6320, 6328, 6336)

class StripCodec_114(recode.StripStep):
    external_coding = 'IBM869'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 6344, 6352, 6360, 6368, 5536, 5544,
            6376, 6384, 5568, 5576, 5584, 5592, 5600, 5608, 6392, 5624)

class StripCodec_115(recode.StripStep):
    external_coding = 'IBM870'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 6400, 6408, 6416,
            6424, 6432, 6440, 6448, 6456, 6464, 6472, 3728, 6480, 6488, 6496,
            6504, 6512, 3776, 6520, 3792, 6528, 3808, 6536, 24, 6544)

class StripCodec_116(recode.StripStep):
    external_coding = 'IBM871'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 6552, 3664,
            6560, 3680, 3688, 3696, 6568, 3712, 6576, 3728, 6584, 6592, 6600,
            4304, 6608, 6616, 6624, 6632, 3800, 6640, 6648, 24, 3824)

class StripCodec_117(recode.StripStep):
    external_coding = 'IBM875'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 4960, 4968, 4976,
            4984, 4992, 6656, 6664, 6672, 6680, 5032, 3728, 5048, 6688, 6696,
            6704, 6712, 3776, 6720, 3792, 6728, 3936, 6736, 24, 6744)

class StripCodec_118(recode.StripStep):
    external_coding = 'IBM880'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 6752, 6760, 6768,
            6776, 6784, 6792, 6800, 6808, 6816, 6824, 6832, 6840, 6848, 6856,
            688, 696, 40, 6864, 4696, 6872, 6880, 6888, 24, 6896)

class StripCodec_119(recode.StripStep):
    external_coding = 'IBM891'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_120(recode.StripStep):
    external_coding = 'IBM903'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_121(recode.StripStep):
    external_coding = 'IBM904'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 6904, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 6912)

class StripCodec_122(recode.StripStep):
    external_coding = 'IBM905'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 6920, 6928, 3664,
            6936, 6944, 6952, 6960, 6968, 6464, 6976, 3728, 6984, 6592, 6992,
            7000, 7008, 7016, 7024, 7032, 7040, 7048, 7056, 24, 7064)

class StripCodec_123(recode.StripStep):
    external_coding = 'IBM918'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 7072, 7080, 7088,
            7096, 7104, 7112, 6136, 7120, 7128, 7136, 3888, 7144, 7152, 7160,
            7168, 7176, 3776, 7184, 3792, 7192, 3936, 7200, 24, 7208)

class StripCodec_124(recode.StripStep):
    external_coding = 'IBM1004'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7216, 7224, 7232, 7240, 1384, 1392,
            1400, 1408, 1416, 1424, 1432, 1440, 1448, 1456, 1464, 1472)

class StripCodec_125(recode.StripStep):
    external_coding = 'IBM1026'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 6928, 3664,
            6936, 3680, 6952, 3696, 6968, 3712, 7248, 3728, 7256, 6592, 7264,
            4304, 7272, 7016, 6624, 7032, 7280, 7048, 7288, 24, 7064)

class StripCodec_126(recode.StripStep):
    external_coding = 'IBM1047'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 3648, 3656, 3664,
            7296, 3680, 3688, 3696, 3704, 3712, 3720, 3728, 3736, 3744, 7304,
            7312, 7320, 3776, 3784, 3792, 3800, 3808, 3816, 24, 3824)

class StripCodec_127(recode.StripStep):
    external_coding = 'CP1250'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7328, 7336, 7232, 7344, 7352, 7360,
            7368, 7376, 1512, 1520, 1528, 1536, 1544, 1552, 1560, 1568)

class StripCodec_128(recode.StripStep):
    external_coding = 'CP1251'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7384, 7392, 7400, 7408, 7416, 7424,
            7432, 7440, 2272, 2280, 2288, 2296, 2304, 2312, 2320, 2328)

class StripCodec_129(recode.StripStep):
    external_coding = 'CP1252'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7448, 7456, 7232, 7240, 1384, 1392,
            1400, 1408, 1416, 1424, 1432, 1440, 1448, 1456, 1464, 1472)

class StripCodec_130(recode.StripStep):
    external_coding = 'CP1253'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7448, 7464, 7232, 7472, 7480, 7488,
            7496, 1944, 1952, 1960, 1968, 1976, 1984, 1992, 2000, 2008)

class StripCodec_131(recode.StripStep):
    external_coding = 'CP1254'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7448, 7224, 7232, 7240, 1384, 1392,
            1400, 1408, 1416, 1424, 2432, 2440, 1448, 2448, 2456, 2464)

class StripCodec_132(recode.StripStep):
    external_coding = 'CP1255'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7448, 7464, 7232, 7472, 2056, 2064,
            1400, 2072, 0, 0, 0, 2080, 2088, 2096, 2104, 7504)

class StripCodec_133(recode.StripStep):
    external_coding = 'CP1256'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7512, 7520, 7528, 7536, 7544, 7552,
            7560, 7568, 7576, 7584, 7592, 7600, 7608, 7616, 7624, 7632)

class StripCodec_134(recode.StripStep):
    external_coding = 'CP1257'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 7328, 7464, 7232, 7472, 7640, 7648,
            3168, 7656, 2832, 2840, 2848, 2856, 2864, 2872, 2880, 7664)

class StripCodec_135(recode.StripStep):
    external_coding = 'EBCDIC-AT-DE'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7672, 3840,
            7680, 3856, 7688, 0, 7696, 72, 3880, 3888, 3896, 7704, 3912,
            0, 0, 4072, 3920, 4088, 3928, 7712, 3944, 24, 3952)

class StripCodec_136(recode.StripStep):
    external_coding = 'EBCDIC-AT-DE-A'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7720, 3840,
            7728, 3856, 7736, 0, 7744, 72, 3880, 3888, 3896, 7752, 3912,
            0, 0, 40, 3920, 4696, 3928, 7760, 3944, 24, 3952)

class StripCodec_137(recode.StripStep):
    external_coding = 'EBCDIC-CA-FR'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 7768, 7776, 7784,
            7792, 7800, 7808, 7816, 3872, 72, 3880, 3888, 3896, 4144, 3912,
            0, 0, 4152, 7824, 4160, 7832, 7840, 7848, 24, 7856)

class StripCodec_138(recode.StripStep):
    external_coding = 'EBCDIC-DK-NO'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7864, 3840,
            7872, 3856, 7880, 0, 7888, 72, 3880, 3888, 3896, 7896, 3912,
            0, 0, 4312, 3920, 4320, 3928, 3936, 3944, 24, 3952)

class StripCodec_139(recode.StripStep):
    external_coding = 'EBCDIC-DK-NO-A'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7904, 3840,
            7912, 3856, 3864, 0, 7920, 72, 3880, 3888, 3896, 7752, 3912,
            0, 0, 40, 3920, 4696, 3928, 7760, 3944, 24, 3952)

class StripCodec_140(recode.StripStep):
    external_coding = 'EBCDIC-FI-SE'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7928, 3840,
            7872, 3856, 7688, 0, 7936, 72, 3880, 3888, 3896, 7896, 3912,
            0, 0, 4072, 3920, 4320, 3928, 7944, 3944, 24, 3952)

class StripCodec_141(recode.StripStep):
    external_coding = 'EBCDIC-FI-SE-A'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7720, 3840,
            7912, 3856, 3864, 0, 7744, 72, 3880, 3888, 3896, 7752, 3912,
            0, 0, 40, 3920, 4696, 3928, 7760, 3944, 24, 3952)

class StripCodec_142(recode.StripStep):
    external_coding = 'EBCDIC-FR'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7952, 3840,
            7960, 3856, 4128, 0, 7968, 72, 3880, 3888, 3896, 4144, 3912,
            0, 0, 4152, 3920, 4160, 3928, 4168, 3944, 24, 3952)

class StripCodec_143(recode.StripStep):
    external_coding = 'EBCDIC-IT'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 7952, 3840,
            7976, 3856, 7984, 0, 7992, 72, 3880, 3888, 3896, 8000, 3912,
            0, 0, 608, 3920, 4160, 3928, 4168, 3944, 24, 3952)

class StripCodec_144(recode.StripStep):
    external_coding = 'EBCDIC-PT'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 3832, 3840,
            3848, 3856, 8008, 0, 8016, 72, 3880, 3888, 3896, 8024, 3912,
            0, 0, 8032, 3920, 5104, 3928, 8040, 3944, 24, 3952)

class StripCodec_145(recode.StripStep):
    external_coding = 'EBCDIC-ES'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 8048, 3840,
            8056, 3856, 8064, 0, 8072, 72, 3880, 3888, 3896, 4144, 3912,
            0, 0, 3776, 3920, 3792, 3928, 3936, 3944, 24, 3952)

class StripCodec_146(recode.StripStep):
    external_coding = 'EBCDIC-ES-A'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 8048, 3840,
            8056, 3856, 3864, 0, 8080, 72, 3880, 3888, 3896, 7752, 3912,
            0, 0, 40, 3920, 4696, 3928, 7760, 3944, 24, 3952)

class StripCodec_147(recode.StripStep):
    external_coding = 'EBCDIC-ES-S'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 8048, 3840,
            8088, 3856, 8064, 0, 8072, 72, 3880, 3888, 3896, 4144, 3912,
            0, 0, 3776, 3920, 3792, 3928, 3936, 3944, 24, 3952)

class StripCodec_148(recode.StripStep):
    external_coding = 'EBCDIC-UK'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 8096, 3840,
            8104, 3856, 3864, 0, 3872, 72, 3880, 3888, 3896, 4512, 3912,
            0, 0, 3776, 3920, 3792, 3928, 3936, 3944, 24, 3952)

class StripCodec_149(recode.StripStep):
    external_coding = 'EBCDIC-US'
    data = unicode_data_pool
    indices = (3584, 3592, 3600, 3608, 3616, 3624, 3632, 3640, 776, 8048, 3840,
            8088, 3856, 3864, 0, 3872, 72, 3880, 3888, 3896, 3904, 3912,
            0, 0, 3776, 3920, 3792, 3928, 3936, 3944, 24, 3952)

class StripCodec_150(recode.StripStep):
    external_coding = 'EBCDIC-IS-FRISS'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 0, 0, 0, 0, 8112, 8120, 8128,
            8136, 3856, 8144, 8152, 8160, 72, 8168, 3888, 3896, 8176, 8184,
            0, 8192, 8200, 8208, 6632, 8216, 8224, 8232, 24, 8240)

class StripCodec_151(recode.StripStep):
    external_coding = 'KOI-7'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 144, 16, 24, 32, 152, 48, 56,
            160, 696, 704, 712, 720, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

class StripCodec_152(recode.StripStep):
    external_coding = 'KOI-8'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 0, 0, 0, 0, 0, 0,
            0, 0, 664, 672, 680, 688, 696, 704, 712, 8248)

class StripCodec_153(recode.StripStep):
    external_coding = 'KOI8-R'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 8256, 8264, 8272, 8280, 8288, 8296,
            8304, 8312, 664, 672, 680, 688, 696, 704, 712, 1792)

class StripCodec_154(recode.StripStep):
    external_coding = 'KOI8-RU'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 8256, 8264, 8320, 8328, 8336, 8344,
            8352, 8360, 664, 672, 680, 688, 696, 704, 712, 1792)

class StripCodec_155(recode.StripStep):
    external_coding = 'KOI8-U'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 8256, 8264, 8368, 8280, 8336, 8376,
            8352, 8384, 664, 672, 680, 688, 696, 704, 0, 0)

class StripCodec_156(recode.StripStep):
    external_coding = 'CWI'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 5272, 8392, 8400, 8408, 8416, 5312,
            5320, 5328, 5336, 5344, 5352, 5360, 8424, 6072, 5384, 6080)

class StripCodec_157(recode.StripStep):
    external_coding = 'macintosh_ce'
    data = unicode_data_pool
    indices = (104, 112, 120, 128, 192, 16, 24, 32, 152, 48, 56,
            160, 168, 80, 88, 200, 8432, 8440, 8448, 8456, 8464, 8472,
            8480, 8488, 8496, 8504, 8512, 8520, 8528, 8536, 8544, 8552)

implied_surfaces = [
    ('IBM367', 'CR-LF'),
    ('CP367', 'CR-LF'),
    ('367', 'CR-LF'),
    ('IBM819', 'CR-LF'),
    ('CP819', 'CR-LF'),
    ('819', 'CR-LF'),
    ('IBM912', 'CR-LF'),
    ('CP912', 'CR-LF'),
    ('912', 'CR-LF'),
    ('macintosh', 'CR'),
    ('mac', 'CR'),
    ('IBM037', 'CR-LF'),
    ('CP037', 'CR-LF'),
    ('037', 'CR-LF'),
    ('IBM038', 'CR-LF'),
    ('CP038', 'CR-LF'),
    ('038', 'CR-LF'),
    ('IBM256', 'CR-LF'),
    ('CP256', 'CR-LF'),
    ('256', 'CR-LF'),
    ('IBM273', 'CR-LF'),
    ('CP273', 'CR-LF'),
    ('273', 'CR-LF'),
    ('IBM274', 'CR-LF'),
    ('CP274', 'CR-LF'),
    ('274', 'CR-LF'),
    ('IBM275', 'CR-LF'),
    ('CP275', 'CR-LF'),
    ('275', 'CR-LF'),
    ('IBM277', 'CR-LF'),
    ('IBM278', 'CR-LF'),
    ('CP278', 'CR-LF'),
    ('278', 'CR-LF'),
    ('IBM280', 'CR-LF'),
    ('CP280', 'CR-LF'),
    ('280', 'CR-LF'),
    ('IBM281', 'CR-LF'),
    ('CP281', 'CR-LF'),
    ('281', 'CR-LF'),
    ('IBM284', 'CR-LF'),
    ('CP284', 'CR-LF'),
    ('284', 'CR-LF'),
    ('IBM285', 'CR-LF'),
    ('CP285', 'CR-LF'),
    ('285', 'CR-LF'),
    ('IBM290', 'CR-LF'),
    ('CP290', 'CR-LF'),
    ('290', 'CR-LF'),
    ('IBM297', 'CR-LF'),
    ('CP297', 'CR-LF'),
    ('297', 'CR-LF'),
    ('IBM420', 'CR-LF'),
    ('CP420', 'CR-LF'),
    ('420', 'CR-LF'),
    ('IBM423', 'CR-LF'),
    ('CP423', 'CR-LF'),
    ('423', 'CR-LF'),
    ('IBM424', 'CR-LF'),
    ('CP424', 'CR-LF'),
    ('424', 'CR-LF'),
    ('IBM437', 'CR-LF'),
    ('CP437', 'CR-LF'),
    ('437', 'CR-LF'),
    ('IBM500', 'CR-LF'),
    ('CP500', 'CR-LF'),
    ('500', 'CR-LF'),
    ('IBM850', 'CR-LF'),
    ('CP850', 'CR-LF'),
    ('850', 'CR-LF'),
    ('IBM851', 'CR-LF'),
    ('CP851', 'CR-LF'),
    ('851', 'CR-LF'),
    ('IBM852', 'CR-LF'),
    ('CP852', 'CR-LF'),
    ('852', 'CR-LF'),
    ('IBM855', 'CR-LF'),
    ('CP855', 'CR-LF'),
    ('855', 'CR-LF'),
    ('IBM857', 'CR-LF'),
    ('CP857', 'CR-LF'),
    ('857', 'CR-LF'),
    ('IBM860', 'CR-LF'),
    ('CP860', 'CR-LF'),
    ('860', 'CR-LF'),
    ('IBM861', 'CR-LF'),
    ('CP861', 'CR-LF'),
    ('861', 'CR-LF'),
    ('IBM862', 'CR-LF'),
    ('CP862', 'CR-LF'),
    ('862', 'CR-LF'),
    ('IBM863', 'CR-LF'),
    ('CP863', 'CR-LF'),
    ('863', 'CR-LF'),
    ('IBM864', 'CR-LF'),
    ('CP864', 'CR-LF'),
    ('864', 'CR-LF'),
    ('IBM865', 'CR-LF'),
    ('CP865', 'CR-LF'),
    ('865', 'CR-LF'),
    ('IBM868', 'CR-LF'),
    ('CP868', 'CR-LF'),
    ('868', 'CR-LF'),
    ('IBM869', 'CR-LF'),
    ('CP869', 'CR-LF'),
    ('869', 'CR-LF'),
    ('IBM870', 'CR-LF'),
    ('CP870', 'CR-LF'),
    ('870', 'CR-LF'),
    ('IBM871', 'CR-LF'),
    ('CP871', 'CR-LF'),
    ('871', 'CR-LF'),
    ('IBM875', 'CR-LF'),
    ('CP875', 'CR-LF'),
    ('875', 'CR-LF'),
    ('IBM880', 'CR-LF'),
    ('CP880', 'CR-LF'),
    ('880', 'CR-LF'),
    ('IBM891', 'CR-LF'),
    ('CP891', 'CR-LF'),
    ('891', 'CR-LF'),
    ('IBM903', 'CR-LF'),
    ('CP903', 'CR-LF'),
    ('903', 'CR-LF'),
    ('IBM904', 'CR-LF'),
    ('CP904', 'CR-LF'),
    ('904', 'CR-LF'),
    ('IBM905', 'CR-LF'),
    ('CP905', 'CR-LF'),
    ('905', 'CR-LF'),
    ('IBM918', 'CR-LF'),
    ('CP918', 'CR-LF'),
    ('918', 'CR-LF'),
    ('IBM1004', 'CR-LF'),
    ('CP1004', 'CR-LF'),
    ('1004', 'CR-LF'),
    ('IBM1026', 'CR-LF'),
    ('CP1026', 'CR-LF'),
    ('1026', 'CR-LF'),
    ('IBM1047', 'CR-LF'),
    ('CP1047', 'CR-LF'),
    ('1047', 'CR-LF'),
    ('CP1250', 'CR-LF'),
    ('1250', 'CR-LF'),
    ('CP1251', 'CR-LF'),
    ('1251', 'CR-LF'),
    ('CP1252', 'CR-LF'),
    ('1252', 'CR-LF'),
    ('CP1253', 'CR-LF'),
    ('1253', 'CR-LF'),
    ('CP1254', 'CR-LF'),
    ('1254', 'CR-LF'),
    ('CP1255', 'CR-LF'),
    ('1255', 'CR-LF'),
    ('CP1256', 'CR-LF'),
    ('1256', 'CR-LF'),
    ('CP1257', 'CR-LF'),
    ('1257', 'CR-LF'),
    ('macintosh_ce', 'CR'),
    ('macce', 'CR'),
    ]
